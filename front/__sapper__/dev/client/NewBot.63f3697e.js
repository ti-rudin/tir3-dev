import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, g as globals, af as binding_callbacks, ag as bind, B as Button, p as validate_store, u as authStore, r as component_subscribe, w as onMount, v as validate_slots, q as stateStore, e as element, x as text, z as space, A as create_component, c as claim_element, b as children, y as claim_text, f as detach_dev, C as claim_space, D as claim_component, h as attr_dev, j as add_location, l as insert_dev, m as append_dev, E as mount_component, ah as add_flush_callback, G as set_data_dev, H as transition_in, I as transition_out, J as destroy_component } from './client.702590eb.js';
import { T as TextField, S as Switch } from './TextField.c644e476.js';

/* src/components/NewBot.svelte generated by Svelte v3.24.0 */

const { console: console_1 } = globals;
const file = "src/components/NewBot.svelte";

// (418:4) <Button href="/" on:click={addNewBot}>
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Создать");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Создать");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(418:4) <Button href=\\\"/\\\" on:click={addNewBot}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let main;
	let div0;
	let p0;
	let t0;
	let t1;
	let div3;
	let div2;
	let div1;
	let textfield0;
	let updating_value;
	let t2;
	let div6;
	let div4;
	let textfield1;
	let updating_value_1;
	let t3;
	let div5;
	let textfield2;
	let updating_value_2;
	let t4;
	let div9;
	let div7;
	let textfield3;
	let updating_value_3;
	let t5;
	let div8;
	let textfield4;
	let updating_value_4;
	let t6;
	let div12;
	let div10;
	let textfield5;
	let updating_value_5;
	let t7;
	let div11;
	let textfield6;
	let updating_value_6;
	let t8;
	let div15;
	let div13;
	let textfield7;
	let updating_value_7;
	let t9;
	let div14;
	let textfield8;
	let updating_value_8;
	let t10;
	let div18;
	let div16;
	let label0;
	let t11;
	let t12;
	let br0;
	let t13;
	let p1;
	let t14;

	let t15_value = (/*ordersizeinquota*/ ctx[9]
	? /*ordersizeinquota*/ ctx[9]
	: 0) + "";

	let t15;
	let t16;
	let t17;
	let t18;

	let t19_value = (/*ordersizeinbase*/ ctx[20]
	? /*ordersizeinbase*/ ctx[20]
	: 0) + "";

	let t19;
	let t20;
	let t21;
	let t22;
	let div17;
	let textfield9;
	let updating_value_9;
	let t23;
	let div21;
	let div19;
	let textfield10;
	let updating_value_10;
	let t24;
	let p2;
	let t25;
	let t26_value = /*ofsetbottomsize*/ ctx[21].toFixed(/*digitprice*/ ctx[3]) + "";
	let t26;
	let t27;
	let t28;
	let t29;
	let div20;
	let textfield11;
	let updating_value_11;
	let t30;
	let p3;
	let t31;
	let t32_value = /*ofsettopsize*/ ctx[22].toFixed(/*digitprice*/ ctx[3]) + "";
	let t32;
	let t33;
	let t34;
	let t35;
	let div23;
	let div22;
	let br1;
	let t36;
	let label1;
	let t37;
	let t38;
	let p4;
	let t39;
	let t40;
	let div26;
	let div24;
	let br2;
	let t41;
	let label2;
	let t42;
	let t43;
	let p5;
	let t44;
	let t45;
	let t46;
	let t47;
	let div25;
	let br3;
	let t48;
	let label3;
	let t49;
	let t50;
	let p6;
	let t51;
	let t52;
	let t53;
	let t54;
	let br4;
	let t55;
	let div29;
	let div27;
	let textfield12;
	let updating_value_12;
	let t56;
	let div28;
	let textfield13;
	let updating_value_13;
	let t57;
	let div32;
	let div30;
	let label4;
	let t58;
	let t59;
	let div31;
	let textfield14;
	let updating_value_14;
	let t60;
	let div35;
	let div33;
	let label5;
	let t61;
	let t62;
	let div34;
	let textfield15;
	let updating_value_15;
	let t63;
	let br5;
	let t64;
	let button;
	let t65;
	let br6;
	let t66;
	let br7;
	let current;

	function textfield0_value_binding(value) {
		/*textfield0_value_binding*/ ctx[26].call(null, value);
	}

	let textfield0_props = { label: "Комментарий", outlined: true };

	if (/*comment*/ ctx[12] !== void 0) {
		textfield0_props.value = /*comment*/ ctx[12];
	}

	textfield0 = new TextField({ props: textfield0_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield0, "value", textfield0_value_binding));

	function textfield1_value_binding(value) {
		/*textfield1_value_binding*/ ctx[27].call(null, value);
	}

	let textfield1_props = {
		label: "Торгуемая валюта",
		outlined: true
	};

	if (/*quotacoin*/ ctx[0] !== void 0) {
		textfield1_props.value = /*quotacoin*/ ctx[0];
	}

	textfield1 = new TextField({ props: textfield1_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield1, "value", textfield1_value_binding));

	function textfield2_value_binding(value) {
		/*textfield2_value_binding*/ ctx[28].call(null, value);
	}

	let textfield2_props = { label: "Базовая валюта", outlined: true };

	if (/*basecoin*/ ctx[1] !== void 0) {
		textfield2_props.value = /*basecoin*/ ctx[1];
	}

	textfield2 = new TextField({ props: textfield2_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield2, "value", textfield2_value_binding));

	function textfield3_value_binding(value) {
		/*textfield3_value_binding*/ ctx[29].call(null, value);
	}

	let textfield3_props = { label: "Округление цены", outlined: true };

	if (/*digitprice*/ ctx[3] !== void 0) {
		textfield3_props.value = /*digitprice*/ ctx[3];
	}

	textfield3 = new TextField({ props: textfield3_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield3, "value", textfield3_value_binding));

	function textfield4_value_binding(value) {
		/*textfield4_value_binding*/ ctx[30].call(null, value);
	}

	let textfield4_props = {
		label: "Округление объема",
		outlined: true
	};

	if (/*digitq*/ ctx[2] !== void 0) {
		textfield4_props.value = /*digitq*/ ctx[2];
	}

	textfield4 = new TextField({ props: textfield4_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield4, "value", textfield4_value_binding));

	function textfield5_value_binding(value) {
		/*textfield5_value_binding*/ ctx[31].call(null, value);
	}

	let textfield5_props = { label: "Низ сетки", outlined: true };

	if (/*minprice*/ ctx[4] !== void 0) {
		textfield5_props.value = /*minprice*/ ctx[4];
	}

	textfield5 = new TextField({ props: textfield5_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield5, "value", textfield5_value_binding));

	function textfield6_value_binding(value) {
		/*textfield6_value_binding*/ ctx[32].call(null, value);
	}

	let textfield6_props = { label: "Верх сетки", outlined: true };

	if (/*maxprice*/ ctx[5] !== void 0) {
		textfield6_props.value = /*maxprice*/ ctx[5];
	}

	textfield6 = new TextField({ props: textfield6_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield6, "value", textfield6_value_binding));

	function textfield7_value_binding(value) {
		/*textfield7_value_binding*/ ctx[33].call(null, value);
	}

	let textfield7_props = {
		label: "Стартовый депозит",
		outlined: true
	};

	if (/*startdepo*/ ctx[6] !== void 0) {
		textfield7_props.value = /*startdepo*/ ctx[6];
	}

	textfield7 = new TextField({ props: textfield7_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield7, "value", textfield7_value_binding));

	function textfield8_value_binding(value) {
		/*textfield8_value_binding*/ ctx[34].call(null, value);
	}

	let textfield8_props = {
		label: "Прибыль в сделке, %",
		outlined: true
	};

	if (/*profitproc*/ ctx[7] !== void 0) {
		textfield8_props.value = /*profitproc*/ ctx[7];
	}

	textfield8 = new TextField({ props: textfield8_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield8, "value", textfield8_value_binding));

	function textfield9_value_binding(value) {
		/*textfield9_value_binding*/ ctx[35].call(null, value);
	}

	let textfield9_props = {
		label: "% от депо",
		outlined: true,
		size: "10"
	};

	if (/*ordersize*/ ctx[8] !== void 0) {
		textfield9_props.value = /*ordersize*/ ctx[8];
	}

	textfield9 = new TextField({ props: textfield9_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield9, "value", textfield9_value_binding));

	function textfield10_value_binding(value) {
		/*textfield10_value_binding*/ ctx[36].call(null, value);
	}

	let textfield10_props = { label: "Отступ снизу, %", outlined: true };

	if (/*ofsetbottom*/ ctx[10] !== void 0) {
		textfield10_props.value = /*ofsetbottom*/ ctx[10];
	}

	textfield10 = new TextField({ props: textfield10_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield10, "value", textfield10_value_binding));

	function textfield11_value_binding(value) {
		/*textfield11_value_binding*/ ctx[37].call(null, value);
	}

	let textfield11_props = {
		label: "Отступ сверху, %",
		outlined: true
	};

	if (/*ofsettop*/ ctx[11] !== void 0) {
		textfield11_props.value = /*ofsettop*/ ctx[11];
	}

	textfield11 = new TextField({ props: textfield11_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield11, "value", textfield11_value_binding));

	function textfield12_value_binding(value) {
		/*textfield12_value_binding*/ ctx[38].call(null, value);
	}

	let textfield12_props = { label: "MA1, мин", outlined: true };

	if (/*ma1*/ ctx[16] !== void 0) {
		textfield12_props.value = /*ma1*/ ctx[16];
	}

	textfield12 = new TextField({ props: textfield12_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield12, "value", textfield12_value_binding));

	function textfield13_value_binding(value) {
		/*textfield13_value_binding*/ ctx[39].call(null, value);
	}

	let textfield13_props = { label: "MA2, мин", outlined: true };

	if (/*ma2*/ ctx[17] !== void 0) {
		textfield13_props.value = /*ma2*/ ctx[17];
	}

	textfield13 = new TextField({ props: textfield13_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield13, "value", textfield13_value_binding));

	function textfield14_value_binding(value) {
		/*textfield14_value_binding*/ ctx[40].call(null, value);
	}

	let textfield14_props = { label: "", outlined: true, size: "10" };

	if (/*maxpriceforzakup*/ ctx[18] !== void 0) {
		textfield14_props.value = /*maxpriceforzakup*/ ctx[18];
	}

	textfield14 = new TextField({ props: textfield14_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield14, "value", textfield14_value_binding));

	function textfield15_value_binding(value) {
		/*textfield15_value_binding*/ ctx[41].call(null, value);
	}

	let textfield15_props = { label: "", outlined: true, size: "10" };

	if (/*minpriceforzakup*/ ctx[19] !== void 0) {
		textfield15_props.value = /*minpriceforzakup*/ ctx[19];
	}

	textfield15 = new TextField({ props: textfield15_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield15, "value", textfield15_value_binding));

	button = new Button({
			props: {
				href: "/",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*addNewBot*/ ctx[23]);

	const block = {
		c: function create() {
			main = element("main");
			div0 = element("div");
			p0 = element("p");
			t0 = text("Создание нового бота");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			create_component(textfield0.$$.fragment);
			t2 = space();
			div6 = element("div");
			div4 = element("div");
			create_component(textfield1.$$.fragment);
			t3 = text("\n          \n        ");
			div5 = element("div");
			create_component(textfield2.$$.fragment);
			t4 = space();
			div9 = element("div");
			div7 = element("div");
			create_component(textfield3.$$.fragment);
			t5 = text("\n          \n        ");
			div8 = element("div");
			create_component(textfield4.$$.fragment);
			t6 = space();
			div12 = element("div");
			div10 = element("div");
			create_component(textfield5.$$.fragment);
			t7 = text("\n          \n        ");
			div11 = element("div");
			create_component(textfield6.$$.fragment);
			t8 = space();
			div15 = element("div");
			div13 = element("div");
			create_component(textfield7.$$.fragment);
			t9 = text("\n          \n        ");
			div14 = element("div");
			create_component(textfield8.$$.fragment);
			t10 = space();
			div18 = element("div");
			div16 = element("div");
			label0 = element("label");
			t11 = text("Объем ордера");
			t12 = space();
			br0 = element("br");
			t13 = space();
			p1 = element("p");
			t14 = text("~ ");
			t15 = text(t15_value);
			t16 = space();
			t17 = text(/*quotacoin*/ ctx[0]);
			t18 = text(", ");
			t19 = text(t19_value);
			t20 = space();
			t21 = text(/*basecoin*/ ctx[1]);
			t22 = text("\n          \n        ");
			div17 = element("div");
			create_component(textfield9.$$.fragment);
			t23 = space();
			div21 = element("div");
			div19 = element("div");
			create_component(textfield10.$$.fragment);
			t24 = space();
			p2 = element("p");
			t25 = text("~ ");
			t26 = text(t26_value);
			t27 = space();
			t28 = text(/*basecoin*/ ctx[1]);
			t29 = text("\n          \n        ");
			div20 = element("div");
			create_component(textfield11.$$.fragment);
			t30 = space();
			p3 = element("p");
			t31 = text("~ ");
			t32 = text(t32_value);
			t33 = space();
			t34 = text(/*basecoin*/ ctx[1]);
			t35 = space();
			div23 = element("div");
			div22 = element("div");
			br1 = element("br");
			t36 = space();
			label1 = element("label");
			t37 = text("Всего этажей");
			t38 = space();
			p4 = element("p");
			t39 = text(/*floorsvsego*/ ctx[13]);
			t40 = space();
			div26 = element("div");
			div24 = element("div");
			br2 = element("br");
			t41 = space();
			label2 = element("label");
			t42 = text("Высота 1-го этажа");
			t43 = space();
			p5 = element("p");
			t44 = text(/*heightfirstfloor*/ ctx[14]);
			t45 = space();
			t46 = text(/*basecoin*/ ctx[1]);
			t47 = space();
			div25 = element("div");
			br3 = element("br");
			t48 = space();
			label3 = element("label");
			t49 = text("Высота верхнего этажа");
			t50 = space();
			p6 = element("p");
			t51 = text(/*heightlastfloor*/ ctx[15]);
			t52 = space();
			t53 = text(/*basecoin*/ ctx[1]);
			t54 = space();
			br4 = element("br");
			t55 = space();
			div29 = element("div");
			div27 = element("div");
			create_component(textfield12.$$.fragment);
			t56 = text("\n          \n        ");
			div28 = element("div");
			create_component(textfield13.$$.fragment);
			t57 = space();
			div32 = element("div");
			div30 = element("div");
			label4 = element("label");
			t58 = text("Не закупать, если цена больше");
			t59 = text("\n          \n        ");
			div31 = element("div");
			create_component(textfield14.$$.fragment);
			t60 = space();
			div35 = element("div");
			div33 = element("div");
			label5 = element("label");
			t61 = text("Не закупать, если цена меньше");
			t62 = space();
			div34 = element("div");
			create_component(textfield15.$$.fragment);
			t63 = space();
			br5 = element("br");
			t64 = space();
			create_component(button.$$.fragment);
			t65 = space();
			br6 = element("br");
			t66 = space();
			br7 = element("br");
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			div0 = claim_element(main_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Создание нового бота");
			p0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(main_nodes);
			div3 = claim_element(main_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(textfield0.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t2 = claim_space(main_nodes);
			div6 = claim_element(main_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			claim_component(textfield1.$$.fragment, div4_nodes);
			div4_nodes.forEach(detach_dev);
			t3 = claim_text(div6_nodes, "\n          \n        ");
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			claim_component(textfield2.$$.fragment, div5_nodes);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t4 = claim_space(main_nodes);
			div9 = claim_element(main_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			claim_component(textfield3.$$.fragment, div7_nodes);
			div7_nodes.forEach(detach_dev);
			t5 = claim_text(div9_nodes, "\n          \n        ");
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			claim_component(textfield4.$$.fragment, div8_nodes);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t6 = claim_space(main_nodes);
			div12 = claim_element(main_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div10 = claim_element(div12_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			claim_component(textfield5.$$.fragment, div10_nodes);
			div10_nodes.forEach(detach_dev);
			t7 = claim_text(div12_nodes, "\n          \n        ");
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			claim_component(textfield6.$$.fragment, div11_nodes);
			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			t8 = claim_space(main_nodes);
			div15 = claim_element(main_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div13 = claim_element(div15_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			claim_component(textfield7.$$.fragment, div13_nodes);
			div13_nodes.forEach(detach_dev);
			t9 = claim_text(div15_nodes, "\n          \n        ");
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			claim_component(textfield8.$$.fragment, div14_nodes);
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t10 = claim_space(main_nodes);
			div18 = claim_element(main_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			div16 = claim_element(div18_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			label0 = claim_element(div16_nodes, "LABEL", { class: true });
			var label0_nodes = children(label0);
			t11 = claim_text(label0_nodes, "Объем ордера");
			label0_nodes.forEach(detach_dev);
			t12 = claim_space(div16_nodes);
			br0 = claim_element(div16_nodes, "BR", {});
			t13 = claim_space(div16_nodes);
			p1 = claim_element(div16_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t14 = claim_text(p1_nodes, "~ ");
			t15 = claim_text(p1_nodes, t15_value);
			t16 = claim_space(p1_nodes);
			t17 = claim_text(p1_nodes, /*quotacoin*/ ctx[0]);
			t18 = claim_text(p1_nodes, ", ");
			t19 = claim_text(p1_nodes, t19_value);
			t20 = claim_space(p1_nodes);
			t21 = claim_text(p1_nodes, /*basecoin*/ ctx[1]);
			p1_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			t22 = claim_text(div18_nodes, "\n          \n        ");
			div17 = claim_element(div18_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			claim_component(textfield9.$$.fragment, div17_nodes);
			div17_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			t23 = claim_space(main_nodes);
			div21 = claim_element(main_nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			div19 = claim_element(div21_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			claim_component(textfield10.$$.fragment, div19_nodes);
			t24 = claim_space(div19_nodes);
			p2 = claim_element(div19_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t25 = claim_text(p2_nodes, "~ ");
			t26 = claim_text(p2_nodes, t26_value);
			t27 = claim_space(p2_nodes);
			t28 = claim_text(p2_nodes, /*basecoin*/ ctx[1]);
			p2_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			t29 = claim_text(div21_nodes, "\n          \n        ");
			div20 = claim_element(div21_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			claim_component(textfield11.$$.fragment, div20_nodes);
			t30 = claim_space(div20_nodes);
			p3 = claim_element(div20_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t31 = claim_text(p3_nodes, "~ ");
			t32 = claim_text(p3_nodes, t32_value);
			t33 = claim_space(p3_nodes);
			t34 = claim_text(p3_nodes, /*basecoin*/ ctx[1]);
			p3_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			t35 = claim_space(main_nodes);
			div23 = claim_element(main_nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			div22 = claim_element(div23_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			br1 = claim_element(div22_nodes, "BR", {});
			t36 = claim_space(div22_nodes);
			label1 = claim_element(div22_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			t37 = claim_text(label1_nodes, "Всего этажей");
			label1_nodes.forEach(detach_dev);
			t38 = claim_space(div22_nodes);
			p4 = claim_element(div22_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t39 = claim_text(p4_nodes, /*floorsvsego*/ ctx[13]);
			p4_nodes.forEach(detach_dev);
			div22_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			t40 = claim_space(main_nodes);
			div26 = claim_element(main_nodes, "DIV", { class: true });
			var div26_nodes = children(div26);
			div24 = claim_element(div26_nodes, "DIV", { class: true });
			var div24_nodes = children(div24);
			br2 = claim_element(div24_nodes, "BR", {});
			t41 = claim_space(div24_nodes);
			label2 = claim_element(div24_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t42 = claim_text(label2_nodes, "Высота 1-го этажа");
			label2_nodes.forEach(detach_dev);
			t43 = claim_space(div24_nodes);
			p5 = claim_element(div24_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t44 = claim_text(p5_nodes, /*heightfirstfloor*/ ctx[14]);
			t45 = claim_space(p5_nodes);
			t46 = claim_text(p5_nodes, /*basecoin*/ ctx[1]);
			p5_nodes.forEach(detach_dev);
			div24_nodes.forEach(detach_dev);
			t47 = claim_space(div26_nodes);
			div25 = claim_element(div26_nodes, "DIV", { class: true });
			var div25_nodes = children(div25);
			br3 = claim_element(div25_nodes, "BR", {});
			t48 = claim_space(div25_nodes);
			label3 = claim_element(div25_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t49 = claim_text(label3_nodes, "Высота верхнего этажа");
			label3_nodes.forEach(detach_dev);
			t50 = claim_space(div25_nodes);
			p6 = claim_element(div25_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t51 = claim_text(p6_nodes, /*heightlastfloor*/ ctx[15]);
			t52 = claim_space(p6_nodes);
			t53 = claim_text(p6_nodes, /*basecoin*/ ctx[1]);
			p6_nodes.forEach(detach_dev);
			div25_nodes.forEach(detach_dev);
			div26_nodes.forEach(detach_dev);
			t54 = claim_space(main_nodes);
			br4 = claim_element(main_nodes, "BR", {});
			t55 = claim_space(main_nodes);
			div29 = claim_element(main_nodes, "DIV", { class: true });
			var div29_nodes = children(div29);
			div27 = claim_element(div29_nodes, "DIV", { class: true });
			var div27_nodes = children(div27);
			claim_component(textfield12.$$.fragment, div27_nodes);
			div27_nodes.forEach(detach_dev);
			t56 = claim_text(div29_nodes, "\n          \n        ");
			div28 = claim_element(div29_nodes, "DIV", { class: true });
			var div28_nodes = children(div28);
			claim_component(textfield13.$$.fragment, div28_nodes);
			div28_nodes.forEach(detach_dev);
			div29_nodes.forEach(detach_dev);
			t57 = claim_space(main_nodes);
			div32 = claim_element(main_nodes, "DIV", { class: true });
			var div32_nodes = children(div32);
			div30 = claim_element(div32_nodes, "DIV", { class: true });
			var div30_nodes = children(div30);
			label4 = claim_element(div30_nodes, "LABEL", { class: true });
			var label4_nodes = children(label4);
			t58 = claim_text(label4_nodes, "Не закупать, если цена больше");
			label4_nodes.forEach(detach_dev);
			div30_nodes.forEach(detach_dev);
			t59 = claim_text(div32_nodes, "\n          \n        ");
			div31 = claim_element(div32_nodes, "DIV", { class: true });
			var div31_nodes = children(div31);
			claim_component(textfield14.$$.fragment, div31_nodes);
			div31_nodes.forEach(detach_dev);
			div32_nodes.forEach(detach_dev);
			t60 = claim_space(main_nodes);
			div35 = claim_element(main_nodes, "DIV", { class: true });
			var div35_nodes = children(div35);
			div33 = claim_element(div35_nodes, "DIV", { class: true });
			var div33_nodes = children(div33);
			label5 = claim_element(div33_nodes, "LABEL", { class: true });
			var label5_nodes = children(label5);
			t61 = claim_text(label5_nodes, "Не закупать, если цена меньше");
			label5_nodes.forEach(detach_dev);
			div33_nodes.forEach(detach_dev);
			t62 = claim_space(div35_nodes);
			div34 = claim_element(div35_nodes, "DIV", { class: true });
			var div34_nodes = children(div34);
			claim_component(textfield15.$$.fragment, div34_nodes);
			div34_nodes.forEach(detach_dev);
			div35_nodes.forEach(detach_dev);
			t63 = claim_space(main_nodes);
			br5 = claim_element(main_nodes, "BR", {});
			t64 = claim_space(main_nodes);
			claim_component(button.$$.fragment, main_nodes);
			t65 = claim_space(main_nodes);
			br6 = claim_element(main_nodes, "BR", {});
			t66 = claim_space(main_nodes);
			br7 = claim_element(main_nodes, "BR", {});
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p0, "class", "text-xl text-gray-900 dark:text-gray-300");
			add_location(p0, file, 292, 8, 8250);
			attr_dev(div0, "class", "headblock svelte-1b158ah");
			add_location(div0, file, 291, 4, 8218);
			attr_dev(div1, "class", "foolrow svelte-1b158ah");
			add_location(div1, file, 297, 12, 8404);
			attr_dev(div2, "class", "leftitem svelte-1b158ah");
			add_location(div2, file, 296, 8, 8369);
			attr_dev(div3, "class", "row svelte-1b158ah");
			add_location(div3, file, 295, 4, 8343);
			attr_dev(div4, "class", "leftitem svelte-1b158ah");
			add_location(div4, file, 303, 8, 8581);
			attr_dev(div5, "class", "rightitem svelte-1b158ah");
			add_location(div5, file, 307, 8, 8731);
			attr_dev(div6, "class", "row svelte-1b158ah");
			add_location(div6, file, 302, 4, 8555);
			attr_dev(div7, "class", "leftitem svelte-1b158ah");
			add_location(div7, file, 312, 8, 8891);
			attr_dev(div8, "class", "rightitem svelte-1b158ah");
			add_location(div8, file, 316, 8, 9041);
			attr_dev(div9, "class", "row svelte-1b158ah");
			add_location(div9, file, 311, 4, 8865);
			attr_dev(div10, "class", "leftitem svelte-1b158ah");
			add_location(div10, file, 321, 8, 9202);
			attr_dev(div11, "class", "rightitem svelte-1b158ah");
			add_location(div11, file, 325, 8, 9344);
			attr_dev(div12, "class", "row svelte-1b158ah");
			add_location(div12, file, 320, 4, 9176);
			attr_dev(div13, "class", "leftitem svelte-1b158ah");
			add_location(div13, file, 330, 8, 9500);
			attr_dev(div14, "class", "rightitem svelte-1b158ah");
			add_location(div14, file, 334, 8, 9651);
			attr_dev(div15, "class", "row svelte-1b158ah");
			add_location(div15, file, 329, 4, 9474);
			attr_dev(label0, "class", "svelte-1b158ah");
			add_location(label0, file, 341, 12, 9854);
			add_location(br0, file, 342, 12, 9894);
			attr_dev(p1, "class", " text-gray-900 dark:text-gray-300");
			add_location(p1, file, 343, 12, 9913);
			attr_dev(div16, "class", "leftitem svelte-1b158ah");
			add_location(div16, file, 340, 8, 9819);
			attr_dev(div17, "class", "rightitem svelte-1b158ah");
			add_location(div17, file, 349, 8, 10160);
			attr_dev(div18, "class", "row svelte-1b158ah");
			add_location(div18, file, 339, 4, 9793);
			attr_dev(p2, "class", " text-gray-900 dark:text-gray-300");
			add_location(p2, file, 357, 12, 10446);
			attr_dev(div19, "class", "leftitem svelte-1b158ah");
			add_location(div19, file, 355, 8, 10327);
			attr_dev(p3, "class", " text-gray-900 dark:text-gray-300");
			add_location(p3, file, 364, 12, 10738);
			attr_dev(div20, "class", "rightitem svelte-1b158ah");
			add_location(div20, file, 362, 8, 10620);
			attr_dev(div21, "class", "row svelte-1b158ah");
			add_location(div21, file, 354, 4, 10301);
			add_location(br1, file, 371, 12, 10956);
			attr_dev(label1, "class", "svelte-1b158ah");
			add_location(label1, file, 372, 12, 10975);
			attr_dev(p4, "class", " text-gray-900 dark:text-gray-300");
			add_location(p4, file, 373, 12, 11015);
			attr_dev(div22, "class", "leftitem svelte-1b158ah");
			add_location(div22, file, 370, 8, 10921);
			attr_dev(div23, "class", "row svelte-1b158ah");
			add_location(div23, file, 369, 4, 10895);
			add_location(br2, file, 378, 12, 11169);
			attr_dev(label2, "class", "svelte-1b158ah");
			add_location(label2, file, 379, 12, 11188);
			attr_dev(p5, "class", " text-gray-900 dark:text-gray-300");
			add_location(p5, file, 380, 12, 11233);
			attr_dev(div24, "class", "leftitem svelte-1b158ah");
			add_location(div24, file, 377, 8, 11134);
			add_location(br3, file, 383, 12, 11371);
			attr_dev(label3, "class", "svelte-1b158ah");
			add_location(label3, file, 384, 12, 11390);
			attr_dev(p6, "class", " text-gray-900 dark:text-gray-300");
			add_location(p6, file, 385, 12, 11439);
			attr_dev(div25, "class", "rightitem svelte-1b158ah");
			add_location(div25, file, 382, 8, 11335);
			attr_dev(div26, "class", "row svelte-1b158ah");
			add_location(div26, file, 376, 4, 11108);
			add_location(br4, file, 388, 4, 11547);
			attr_dev(div27, "class", "leftitem svelte-1b158ah");
			add_location(div27, file, 390, 8, 11584);
			attr_dev(div28, "class", "rightitem svelte-1b158ah");
			add_location(div28, file, 394, 8, 11720);
			attr_dev(div29, "class", "row svelte-1b158ah");
			add_location(div29, file, 389, 4, 11558);
			attr_dev(label4, "class", "svelte-1b158ah");
			add_location(label4, file, 400, 12, 11912);
			attr_dev(div30, "class", "leftitem padtop5 svelte-1b158ah");
			add_location(div30, file, 399, 8, 11869);
			attr_dev(div31, "class", "rightitem svelte-1b158ah");
			add_location(div31, file, 403, 8, 12001);
			attr_dev(div32, "class", "row svelte-1b158ah");
			add_location(div32, file, 398, 4, 11843);
			attr_dev(label5, "class", "svelte-1b158ah");
			add_location(label5, file, 410, 12, 12209);
			attr_dev(div33, "class", "leftitem padtop5 svelte-1b158ah");
			add_location(div33, file, 409, 8, 12166);
			attr_dev(div34, "class", "rightitem svelte-1b158ah");
			add_location(div34, file, 412, 8, 12277);
			attr_dev(div35, "class", "row svelte-1b158ah");
			add_location(div35, file, 408, 4, 12140);
			add_location(br5, file, 416, 4, 12415);
			add_location(br6, file, 418, 4, 12485);
			add_location(br7, file, 419, 4, 12496);
			attr_dev(main, "class", "svelte-1b158ah");
			add_location(main, file, 290, 0, 8207);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			append_dev(main, div0);
			append_dev(div0, p0);
			append_dev(p0, t0);
			append_dev(main, t1);
			append_dev(main, div3);
			append_dev(div3, div2);
			append_dev(div2, div1);
			mount_component(textfield0, div1, null);
			append_dev(main, t2);
			append_dev(main, div6);
			append_dev(div6, div4);
			mount_component(textfield1, div4, null);
			append_dev(div6, t3);
			append_dev(div6, div5);
			mount_component(textfield2, div5, null);
			append_dev(main, t4);
			append_dev(main, div9);
			append_dev(div9, div7);
			mount_component(textfield3, div7, null);
			append_dev(div9, t5);
			append_dev(div9, div8);
			mount_component(textfield4, div8, null);
			append_dev(main, t6);
			append_dev(main, div12);
			append_dev(div12, div10);
			mount_component(textfield5, div10, null);
			append_dev(div12, t7);
			append_dev(div12, div11);
			mount_component(textfield6, div11, null);
			append_dev(main, t8);
			append_dev(main, div15);
			append_dev(div15, div13);
			mount_component(textfield7, div13, null);
			append_dev(div15, t9);
			append_dev(div15, div14);
			mount_component(textfield8, div14, null);
			append_dev(main, t10);
			append_dev(main, div18);
			append_dev(div18, div16);
			append_dev(div16, label0);
			append_dev(label0, t11);
			append_dev(div16, t12);
			append_dev(div16, br0);
			append_dev(div16, t13);
			append_dev(div16, p1);
			append_dev(p1, t14);
			append_dev(p1, t15);
			append_dev(p1, t16);
			append_dev(p1, t17);
			append_dev(p1, t18);
			append_dev(p1, t19);
			append_dev(p1, t20);
			append_dev(p1, t21);
			append_dev(div18, t22);
			append_dev(div18, div17);
			mount_component(textfield9, div17, null);
			append_dev(main, t23);
			append_dev(main, div21);
			append_dev(div21, div19);
			mount_component(textfield10, div19, null);
			append_dev(div19, t24);
			append_dev(div19, p2);
			append_dev(p2, t25);
			append_dev(p2, t26);
			append_dev(p2, t27);
			append_dev(p2, t28);
			append_dev(div21, t29);
			append_dev(div21, div20);
			mount_component(textfield11, div20, null);
			append_dev(div20, t30);
			append_dev(div20, p3);
			append_dev(p3, t31);
			append_dev(p3, t32);
			append_dev(p3, t33);
			append_dev(p3, t34);
			append_dev(main, t35);
			append_dev(main, div23);
			append_dev(div23, div22);
			append_dev(div22, br1);
			append_dev(div22, t36);
			append_dev(div22, label1);
			append_dev(label1, t37);
			append_dev(div22, t38);
			append_dev(div22, p4);
			append_dev(p4, t39);
			append_dev(main, t40);
			append_dev(main, div26);
			append_dev(div26, div24);
			append_dev(div24, br2);
			append_dev(div24, t41);
			append_dev(div24, label2);
			append_dev(label2, t42);
			append_dev(div24, t43);
			append_dev(div24, p5);
			append_dev(p5, t44);
			append_dev(p5, t45);
			append_dev(p5, t46);
			append_dev(div26, t47);
			append_dev(div26, div25);
			append_dev(div25, br3);
			append_dev(div25, t48);
			append_dev(div25, label3);
			append_dev(label3, t49);
			append_dev(div25, t50);
			append_dev(div25, p6);
			append_dev(p6, t51);
			append_dev(p6, t52);
			append_dev(p6, t53);
			append_dev(main, t54);
			append_dev(main, br4);
			append_dev(main, t55);
			append_dev(main, div29);
			append_dev(div29, div27);
			mount_component(textfield12, div27, null);
			append_dev(div29, t56);
			append_dev(div29, div28);
			mount_component(textfield13, div28, null);
			append_dev(main, t57);
			append_dev(main, div32);
			append_dev(div32, div30);
			append_dev(div30, label4);
			append_dev(label4, t58);
			append_dev(div32, t59);
			append_dev(div32, div31);
			mount_component(textfield14, div31, null);
			append_dev(main, t60);
			append_dev(main, div35);
			append_dev(div35, div33);
			append_dev(div33, label5);
			append_dev(label5, t61);
			append_dev(div35, t62);
			append_dev(div35, div34);
			mount_component(textfield15, div34, null);
			append_dev(main, t63);
			append_dev(main, br5);
			append_dev(main, t64);
			mount_component(button, main, null);
			append_dev(main, t65);
			append_dev(main, br6);
			append_dev(main, t66);
			append_dev(main, br7);
			current = true;
		},
		p: function update(ctx, dirty) {
			const textfield0_changes = {};

			if (!updating_value && dirty[0] & /*comment*/ 4096) {
				updating_value = true;
				textfield0_changes.value = /*comment*/ ctx[12];
				add_flush_callback(() => updating_value = false);
			}

			textfield0.$set(textfield0_changes);
			const textfield1_changes = {};

			if (!updating_value_1 && dirty[0] & /*quotacoin*/ 1) {
				updating_value_1 = true;
				textfield1_changes.value = /*quotacoin*/ ctx[0];
				add_flush_callback(() => updating_value_1 = false);
			}

			textfield1.$set(textfield1_changes);
			const textfield2_changes = {};

			if (!updating_value_2 && dirty[0] & /*basecoin*/ 2) {
				updating_value_2 = true;
				textfield2_changes.value = /*basecoin*/ ctx[1];
				add_flush_callback(() => updating_value_2 = false);
			}

			textfield2.$set(textfield2_changes);
			const textfield3_changes = {};

			if (!updating_value_3 && dirty[0] & /*digitprice*/ 8) {
				updating_value_3 = true;
				textfield3_changes.value = /*digitprice*/ ctx[3];
				add_flush_callback(() => updating_value_3 = false);
			}

			textfield3.$set(textfield3_changes);
			const textfield4_changes = {};

			if (!updating_value_4 && dirty[0] & /*digitq*/ 4) {
				updating_value_4 = true;
				textfield4_changes.value = /*digitq*/ ctx[2];
				add_flush_callback(() => updating_value_4 = false);
			}

			textfield4.$set(textfield4_changes);
			const textfield5_changes = {};

			if (!updating_value_5 && dirty[0] & /*minprice*/ 16) {
				updating_value_5 = true;
				textfield5_changes.value = /*minprice*/ ctx[4];
				add_flush_callback(() => updating_value_5 = false);
			}

			textfield5.$set(textfield5_changes);
			const textfield6_changes = {};

			if (!updating_value_6 && dirty[0] & /*maxprice*/ 32) {
				updating_value_6 = true;
				textfield6_changes.value = /*maxprice*/ ctx[5];
				add_flush_callback(() => updating_value_6 = false);
			}

			textfield6.$set(textfield6_changes);
			const textfield7_changes = {};

			if (!updating_value_7 && dirty[0] & /*startdepo*/ 64) {
				updating_value_7 = true;
				textfield7_changes.value = /*startdepo*/ ctx[6];
				add_flush_callback(() => updating_value_7 = false);
			}

			textfield7.$set(textfield7_changes);
			const textfield8_changes = {};

			if (!updating_value_8 && dirty[0] & /*profitproc*/ 128) {
				updating_value_8 = true;
				textfield8_changes.value = /*profitproc*/ ctx[7];
				add_flush_callback(() => updating_value_8 = false);
			}

			textfield8.$set(textfield8_changes);

			if ((!current || dirty[0] & /*ordersizeinquota*/ 512) && t15_value !== (t15_value = (/*ordersizeinquota*/ ctx[9]
			? /*ordersizeinquota*/ ctx[9]
			: 0) + "")) set_data_dev(t15, t15_value);

			if (!current || dirty[0] & /*quotacoin*/ 1) set_data_dev(t17, /*quotacoin*/ ctx[0]);

			if ((!current || dirty[0] & /*ordersizeinbase*/ 1048576) && t19_value !== (t19_value = (/*ordersizeinbase*/ ctx[20]
			? /*ordersizeinbase*/ ctx[20]
			: 0) + "")) set_data_dev(t19, t19_value);

			if (!current || dirty[0] & /*basecoin*/ 2) set_data_dev(t21, /*basecoin*/ ctx[1]);
			const textfield9_changes = {};

			if (!updating_value_9 && dirty[0] & /*ordersize*/ 256) {
				updating_value_9 = true;
				textfield9_changes.value = /*ordersize*/ ctx[8];
				add_flush_callback(() => updating_value_9 = false);
			}

			textfield9.$set(textfield9_changes);
			const textfield10_changes = {};

			if (!updating_value_10 && dirty[0] & /*ofsetbottom*/ 1024) {
				updating_value_10 = true;
				textfield10_changes.value = /*ofsetbottom*/ ctx[10];
				add_flush_callback(() => updating_value_10 = false);
			}

			textfield10.$set(textfield10_changes);
			if ((!current || dirty[0] & /*ofsetbottomsize, digitprice*/ 2097160) && t26_value !== (t26_value = /*ofsetbottomsize*/ ctx[21].toFixed(/*digitprice*/ ctx[3]) + "")) set_data_dev(t26, t26_value);
			if (!current || dirty[0] & /*basecoin*/ 2) set_data_dev(t28, /*basecoin*/ ctx[1]);
			const textfield11_changes = {};

			if (!updating_value_11 && dirty[0] & /*ofsettop*/ 2048) {
				updating_value_11 = true;
				textfield11_changes.value = /*ofsettop*/ ctx[11];
				add_flush_callback(() => updating_value_11 = false);
			}

			textfield11.$set(textfield11_changes);
			if ((!current || dirty[0] & /*ofsettopsize, digitprice*/ 4194312) && t32_value !== (t32_value = /*ofsettopsize*/ ctx[22].toFixed(/*digitprice*/ ctx[3]) + "")) set_data_dev(t32, t32_value);
			if (!current || dirty[0] & /*basecoin*/ 2) set_data_dev(t34, /*basecoin*/ ctx[1]);
			if (!current || dirty[0] & /*floorsvsego*/ 8192) set_data_dev(t39, /*floorsvsego*/ ctx[13]);
			if (!current || dirty[0] & /*heightfirstfloor*/ 16384) set_data_dev(t44, /*heightfirstfloor*/ ctx[14]);
			if (!current || dirty[0] & /*basecoin*/ 2) set_data_dev(t46, /*basecoin*/ ctx[1]);
			if (!current || dirty[0] & /*heightlastfloor*/ 32768) set_data_dev(t51, /*heightlastfloor*/ ctx[15]);
			if (!current || dirty[0] & /*basecoin*/ 2) set_data_dev(t53, /*basecoin*/ ctx[1]);
			const textfield12_changes = {};

			if (!updating_value_12 && dirty[0] & /*ma1*/ 65536) {
				updating_value_12 = true;
				textfield12_changes.value = /*ma1*/ ctx[16];
				add_flush_callback(() => updating_value_12 = false);
			}

			textfield12.$set(textfield12_changes);
			const textfield13_changes = {};

			if (!updating_value_13 && dirty[0] & /*ma2*/ 131072) {
				updating_value_13 = true;
				textfield13_changes.value = /*ma2*/ ctx[17];
				add_flush_callback(() => updating_value_13 = false);
			}

			textfield13.$set(textfield13_changes);
			const textfield14_changes = {};

			if (!updating_value_14 && dirty[0] & /*maxpriceforzakup*/ 262144) {
				updating_value_14 = true;
				textfield14_changes.value = /*maxpriceforzakup*/ ctx[18];
				add_flush_callback(() => updating_value_14 = false);
			}

			textfield14.$set(textfield14_changes);
			const textfield15_changes = {};

			if (!updating_value_15 && dirty[0] & /*minpriceforzakup*/ 524288) {
				updating_value_15 = true;
				textfield15_changes.value = /*minpriceforzakup*/ ctx[19];
				add_flush_callback(() => updating_value_15 = false);
			}

			textfield15.$set(textfield15_changes);
			const button_changes = {};

			if (dirty[1] & /*$$scope*/ 16777216) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textfield0.$$.fragment, local);
			transition_in(textfield1.$$.fragment, local);
			transition_in(textfield2.$$.fragment, local);
			transition_in(textfield3.$$.fragment, local);
			transition_in(textfield4.$$.fragment, local);
			transition_in(textfield5.$$.fragment, local);
			transition_in(textfield6.$$.fragment, local);
			transition_in(textfield7.$$.fragment, local);
			transition_in(textfield8.$$.fragment, local);
			transition_in(textfield9.$$.fragment, local);
			transition_in(textfield10.$$.fragment, local);
			transition_in(textfield11.$$.fragment, local);
			transition_in(textfield12.$$.fragment, local);
			transition_in(textfield13.$$.fragment, local);
			transition_in(textfield14.$$.fragment, local);
			transition_in(textfield15.$$.fragment, local);
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textfield0.$$.fragment, local);
			transition_out(textfield1.$$.fragment, local);
			transition_out(textfield2.$$.fragment, local);
			transition_out(textfield3.$$.fragment, local);
			transition_out(textfield4.$$.fragment, local);
			transition_out(textfield5.$$.fragment, local);
			transition_out(textfield6.$$.fragment, local);
			transition_out(textfield7.$$.fragment, local);
			transition_out(textfield8.$$.fragment, local);
			transition_out(textfield9.$$.fragment, local);
			transition_out(textfield10.$$.fragment, local);
			transition_out(textfield11.$$.fragment, local);
			transition_out(textfield12.$$.fragment, local);
			transition_out(textfield13.$$.fragment, local);
			transition_out(textfield14.$$.fragment, local);
			transition_out(textfield15.$$.fragment, local);
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
			destroy_component(textfield0);
			destroy_component(textfield1);
			destroy_component(textfield2);
			destroy_component(textfield3);
			destroy_component(textfield4);
			destroy_component(textfield5);
			destroy_component(textfield6);
			destroy_component(textfield7);
			destroy_component(textfield8);
			destroy_component(textfield9);
			destroy_component(textfield10);
			destroy_component(textfield11);
			destroy_component(textfield12);
			destroy_component(textfield13);
			destroy_component(textfield14);
			destroy_component(textfield15);
			destroy_component(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $authStore;
	validate_store(authStore, "authStore");
	component_subscribe($$self, authStore, $$value => $$invalidate(44, $authStore = $$value));
	let { urlhost } = $$props;
	let { comission } = $$props;
	let userid = $authStore.user.uid;
	let urlbotslist = urlhost + "botslist";

	//let newbot = urlhost + 'api/newbot.php';
	let api_bots = "http://77.87.212.38:1337/bots";

	let api_botcreate = urlhost + "botcreate";
	let isrunning = false;
	let quotacoin;
	let basecoin;
	let digitq;
	let digitprice;
	let minprice;
	let maxprice;
	let startdepo;
	let profitproc;
	let ordersize;
	let ordersizeinquota = 0;
	let ofsetbottom;
	let ofsettop;
	let comment;
	let floorsvsego = 0;
	let startfloorprice = minprice;
	let heightfirstfloor = 0;
	let heightlastfloor = 0;
	let ma1 = 3;
	let ma2 = 30;
	let maxpriceforzakup;
	let minpriceforzakup;
	let floors = [];
	let curenntprice = 0;
	let priceforwake;
	let handyzapretnazakup = false;

	function getfloorsvsego(m, mx, pr, ob, ot) {
		let fv = 1;
		let height_floor = 0;

		if (m && mx && pr && ob && ot) {
			let p = parseInt(pr * 1000) / 1000;
			floors = [];
			let mnz = 10 * parseInt(digitprice);
			let startfloorprice = parseInt(m * mnz) / mnz;

			if (m && mx && p) {
				while (startfloorprice < mx) {
					height_floor = startfloorprice * (comission + p) / 100 + ofsetbottom * startfloorprice / 100 + ofsettop * startfloorprice / 100;

					floors.push([
						fv,
						startfloorprice,
						startfloorprice + height_floor,
						startfloorprice + ofsetbottom * startfloorprice / 100,
						startfloorprice + ofsetbottom * startfloorprice / 100 + startfloorprice * comission / 100,
						startfloorprice + ofsetbottom * startfloorprice / 100 + startfloorprice * comission / 100 + ofsettop * startfloorprice / 100,
						startfloorprice + ofsetbottom * startfloorprice / 100 + startfloorprice * (comission + p) / 100,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0
					]);

					startfloorprice = startfloorprice + height_floor;
					fv++;
				}

				if (m < mx) {
					$$invalidate(14, heightfirstfloor = (floors[0][2] - floors[0][1]).toFixed(digitprice));
				} else {
					$$invalidate(14, heightfirstfloor = 0);
				}

				if (m < mx) {
					$$invalidate(15, heightlastfloor = (floors[fv - 2][2] - floors[fv - 2][1]).toFixed(digitprice));
				} else {
					$$invalidate(15, heightlastfloor = 0);
				}

				console.log(heightfirstfloor, heightlastfloor);
			}

			fv = fv - 1;
			return fv;
		}
	}

	let bots = [];

	onMount(async () => {
		const res = await fetch(urlbotslist);
		bots = await res.json();
	});

	function addNewBot() {
		var d = new Date();
		var ms = Date.parse(d) / 1000;

		if (bots == null) {
			bots = [];
		}

		let botname = quotacoin + basecoin + "-" + ms;
		let moneta = quotacoin + basecoin;
		bots = [...bots, [false, botname, 0, 0, 0, 0, 0, 0, userid]];

		let settings = {
			botname,
			isrunning,
			handyzapretnazakup,
			comment,
			quotacoin,
			basecoin,
			moneta,
			digitq,
			digitprice,
			minprice,
			maxprice,
			profitproc,
			ordersize,
			ofsetbottom,
			ofsettop,
			ma1,
			ma2,
			maxpriceforzakup,
			minpriceforzakup,
			priceforwake,
			userid
		};

		let finance = {
			startdepo,
			depo: startdepo,
			quotanal: 0,
			quotainorders: 0,
			basenal: startdepo,
			baseinorders: 0,
			profittoday: 0
		};

		let sales = { today: [], days: [], all: [] };

		let status = {
			currentprice: -1,
			lastprice: -1,
			currentfloor: -1,
			lastfloor: -1,
			sr_ma_big: -1,
			sr_ma_small: -1,
			rezhim: "Стартовые настройки",
			updated: ms
		};

		let ttp = {
			raschstopprice: 0,
			curstop: 0,
			curorderid: 0,
			quantity: 0,
			ttpbusy: false,
			sold: false
		};

		fetch(api_botcreate, {
			method: "post",
			headers: {
				Accept: "application/json, text/plain, */*",
				"Content-Type": "application/json"
			},
			body: JSON.stringify({
				botname,
				"busy": false,
				"onoff": true,
				"user_id_from_google": userid,
				"settings": JSON.stringify(settings),
				"floors": JSON.stringify(floors),
				"finance": JSON.stringify(finance),
				"sales": JSON.stringify(sales),
				"status": JSON.stringify(status),
				"ttp": JSON.stringify(ttp),
				"start_set": JSON.stringify({
					settings,
					floors,
					finance,
					sales,
					status,
					ttp
				})
			})
		});
	} //fetch(api_botcreate, {
	//    method: 'post',

	const writable_props = ["urlhost", "comission"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<NewBot> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("NewBot", $$slots, []);

	function textfield0_value_binding(value) {
		comment = value;
		$$invalidate(12, comment);
	}

	function textfield1_value_binding(value) {
		quotacoin = value;
		$$invalidate(0, quotacoin);
	}

	function textfield2_value_binding(value) {
		basecoin = value;
		$$invalidate(1, basecoin);
	}

	function textfield3_value_binding(value) {
		digitprice = value;
		$$invalidate(3, digitprice);
	}

	function textfield4_value_binding(value) {
		digitq = value;
		$$invalidate(2, digitq);
	}

	function textfield5_value_binding(value) {
		minprice = value;
		$$invalidate(4, minprice);
	}

	function textfield6_value_binding(value) {
		maxprice = value;
		$$invalidate(5, maxprice);
	}

	function textfield7_value_binding(value) {
		startdepo = value;
		$$invalidate(6, startdepo);
	}

	function textfield8_value_binding(value) {
		profitproc = value;
		$$invalidate(7, profitproc);
	}

	function textfield9_value_binding(value) {
		ordersize = value;
		$$invalidate(8, ordersize);
	}

	function textfield10_value_binding(value) {
		ofsetbottom = value;
		$$invalidate(10, ofsetbottom);
	}

	function textfield11_value_binding(value) {
		ofsettop = value;
		$$invalidate(11, ofsettop);
	}

	function textfield12_value_binding(value) {
		ma1 = value;
		$$invalidate(16, ma1);
	}

	function textfield13_value_binding(value) {
		ma2 = value;
		$$invalidate(17, ma2);
	}

	function textfield14_value_binding(value) {
		maxpriceforzakup = value;
		$$invalidate(18, maxpriceforzakup);
	}

	function textfield15_value_binding(value) {
		minpriceforzakup = value;
		$$invalidate(19, minpriceforzakup);
	}

	$$self.$set = $$props => {
		if ("urlhost" in $$props) $$invalidate(24, urlhost = $$props.urlhost);
		if ("comission" in $$props) $$invalidate(25, comission = $$props.comission);
	};

	$$self.$capture_state = () => ({
		onMount,
		TextField,
		Switch,
		Button,
		urlhost,
		comission,
		authStore,
		stateStore,
		userid,
		urlbotslist,
		api_bots,
		api_botcreate,
		isrunning,
		quotacoin,
		basecoin,
		digitq,
		digitprice,
		minprice,
		maxprice,
		startdepo,
		profitproc,
		ordersize,
		ordersizeinquota,
		ofsetbottom,
		ofsettop,
		comment,
		floorsvsego,
		startfloorprice,
		heightfirstfloor,
		heightlastfloor,
		ma1,
		ma2,
		maxpriceforzakup,
		minpriceforzakup,
		floors,
		curenntprice,
		priceforwake,
		handyzapretnazakup,
		getfloorsvsego,
		bots,
		addNewBot,
		$authStore,
		ordersizeinbase,
		ofsetbottomsize,
		ofsettopsize
	});

	$$self.$inject_state = $$props => {
		if ("urlhost" in $$props) $$invalidate(24, urlhost = $$props.urlhost);
		if ("comission" in $$props) $$invalidate(25, comission = $$props.comission);
		if ("userid" in $$props) userid = $$props.userid;
		if ("urlbotslist" in $$props) urlbotslist = $$props.urlbotslist;
		if ("api_bots" in $$props) api_bots = $$props.api_bots;
		if ("api_botcreate" in $$props) api_botcreate = $$props.api_botcreate;
		if ("isrunning" in $$props) isrunning = $$props.isrunning;
		if ("quotacoin" in $$props) $$invalidate(0, quotacoin = $$props.quotacoin);
		if ("basecoin" in $$props) $$invalidate(1, basecoin = $$props.basecoin);
		if ("digitq" in $$props) $$invalidate(2, digitq = $$props.digitq);
		if ("digitprice" in $$props) $$invalidate(3, digitprice = $$props.digitprice);
		if ("minprice" in $$props) $$invalidate(4, minprice = $$props.minprice);
		if ("maxprice" in $$props) $$invalidate(5, maxprice = $$props.maxprice);
		if ("startdepo" in $$props) $$invalidate(6, startdepo = $$props.startdepo);
		if ("profitproc" in $$props) $$invalidate(7, profitproc = $$props.profitproc);
		if ("ordersize" in $$props) $$invalidate(8, ordersize = $$props.ordersize);
		if ("ordersizeinquota" in $$props) $$invalidate(9, ordersizeinquota = $$props.ordersizeinquota);
		if ("ofsetbottom" in $$props) $$invalidate(10, ofsetbottom = $$props.ofsetbottom);
		if ("ofsettop" in $$props) $$invalidate(11, ofsettop = $$props.ofsettop);
		if ("comment" in $$props) $$invalidate(12, comment = $$props.comment);
		if ("floorsvsego" in $$props) $$invalidate(13, floorsvsego = $$props.floorsvsego);
		if ("startfloorprice" in $$props) startfloorprice = $$props.startfloorprice;
		if ("heightfirstfloor" in $$props) $$invalidate(14, heightfirstfloor = $$props.heightfirstfloor);
		if ("heightlastfloor" in $$props) $$invalidate(15, heightlastfloor = $$props.heightlastfloor);
		if ("ma1" in $$props) $$invalidate(16, ma1 = $$props.ma1);
		if ("ma2" in $$props) $$invalidate(17, ma2 = $$props.ma2);
		if ("maxpriceforzakup" in $$props) $$invalidate(18, maxpriceforzakup = $$props.maxpriceforzakup);
		if ("minpriceforzakup" in $$props) $$invalidate(19, minpriceforzakup = $$props.minpriceforzakup);
		if ("floors" in $$props) floors = $$props.floors;
		if ("curenntprice" in $$props) curenntprice = $$props.curenntprice;
		if ("priceforwake" in $$props) priceforwake = $$props.priceforwake;
		if ("handyzapretnazakup" in $$props) handyzapretnazakup = $$props.handyzapretnazakup;
		if ("bots" in $$props) bots = $$props.bots;
		if ("ordersizeinbase" in $$props) $$invalidate(20, ordersizeinbase = $$props.ordersizeinbase);
		if ("ofsetbottomsize" in $$props) $$invalidate(21, ofsetbottomsize = $$props.ofsetbottomsize);
		if ("ofsettopsize" in $$props) $$invalidate(22, ofsettopsize = $$props.ofsettopsize);
	};

	let ordersizeinbase;
	let ofsetbottomsize;
	let ofsettopsize;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*startdepo, ordersize, minprice, digitq*/ 340) {
			 $$invalidate(9, ordersizeinquota = (startdepo / 100 * ordersize / minprice).toFixed(digitq));
		}

		if ($$self.$$.dirty[0] & /*startdepo, ordersize, digitq*/ 324) {
			 $$invalidate(20, ordersizeinbase = (startdepo / 100 * ordersize).toFixed(digitq));
		}

		if ($$self.$$.dirty[0] & /*minprice, ofsetbottom*/ 1040) {
			 $$invalidate(21, ofsetbottomsize = minprice / 100 * ofsetbottom);
		}

		if ($$self.$$.dirty[0] & /*minprice, profitproc, ofsettop*/ 2192) {
			 $$invalidate(22, ofsettopsize = minprice * (1 + profitproc / 100) / 100 * ofsettop);
		}

		if ($$self.$$.dirty[0] & /*minprice, maxprice, profitproc, ofsetbottom, ofsettop*/ 3248) {
			 $$invalidate(13, floorsvsego = getfloorsvsego(minprice, maxprice, profitproc, ofsetbottom, ofsettop));
		}
	};

	return [
		quotacoin,
		basecoin,
		digitq,
		digitprice,
		minprice,
		maxprice,
		startdepo,
		profitproc,
		ordersize,
		ordersizeinquota,
		ofsetbottom,
		ofsettop,
		comment,
		floorsvsego,
		heightfirstfloor,
		heightlastfloor,
		ma1,
		ma2,
		maxpriceforzakup,
		minpriceforzakup,
		ordersizeinbase,
		ofsetbottomsize,
		ofsettopsize,
		addNewBot,
		urlhost,
		comission,
		textfield0_value_binding,
		textfield1_value_binding,
		textfield2_value_binding,
		textfield3_value_binding,
		textfield4_value_binding,
		textfield5_value_binding,
		textfield6_value_binding,
		textfield7_value_binding,
		textfield8_value_binding,
		textfield9_value_binding,
		textfield10_value_binding,
		textfield11_value_binding,
		textfield12_value_binding,
		textfield13_value_binding,
		textfield14_value_binding,
		textfield15_value_binding
	];
}

class NewBot extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { urlhost: 24, comission: 25 }, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "NewBot",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*urlhost*/ ctx[24] === undefined && !("urlhost" in props)) {
			console_1.warn("<NewBot> was created without expected prop 'urlhost'");
		}

		if (/*comission*/ ctx[25] === undefined && !("comission" in props)) {
			console_1.warn("<NewBot> was created without expected prop 'comission'");
		}
	}

	get urlhost() {
		throw new Error("<NewBot>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set urlhost(value) {
		throw new Error("<NewBot>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get comission() {
		throw new Error("<NewBot>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set comission(value) {
		throw new Error("<NewBot>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { NewBot as N };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
