import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, g as globals, v as validate_slots, e as element, a as svg_element, c as claim_element, b as children, f as detach_dev, h as attr_dev, j as add_location, k as set_style, l as insert_dev, m as append_dev, n as noop, o as validate_each_argument, B as Button, p as validate_store, q as stateStore, r as component_subscribe, u as authStore, w as onMount, x as text, y as claim_text, z as space, A as create_component, C as claim_space, D as claim_component, E as mount_component, F as listen_dev, G as set_data_dev, H as transition_in, I as transition_out, J as destroy_component, K as group_outros, L as check_outros, M as destroy_each, N as set_store_value, O as is_function, P as SignInButton, Q as empty, R as query_selector_all, T as assign, U as get_spread_update, V as get_spread_object } from './client.662cdd84.js';
import { S as Switch } from './TextField.3f6e6c2a.js';
import { N as NewBot } from './NewBot.e4cf743f.js';

/* src/components/IndLoad.svelte generated by Svelte v3.24.0 */

const { console: console_1 } = globals;
const file = "src/components/IndLoad.svelte";

function create_fragment(ctx) {
	let main;
	let svg;
	let path0;
	let mask;
	let rect;
	let mask_id_value;
	let g;
	let path1;
	let g_mask_value;

	const block = {
		c: function create() {
			main = element("main");
			svg = svg_element("svg");
			path0 = svg_element("path");
			mask = svg_element("mask");
			rect = svg_element("rect");
			g = svg_element("g");
			path1 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);

			svg = claim_element(
				main_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true,
					style: true
				},
				1
			);

			var svg_nodes = children(svg);

			path0 = claim_element(
				svg_nodes,
				"path",
				{
					"fill-rule": true,
					"clip-rule": true,
					d: true,
					fill: true
				},
				1
			);

			children(path0).forEach(detach_dev);

			mask = claim_element(
				svg_nodes,
				"mask",
				{
					id: true,
					"mask-type": true,
					maskUnits: true,
					x: true,
					y: true,
					width: true,
					height: true
				},
				1
			);

			var mask_nodes = children(mask);
			rect = claim_element(mask_nodes, "rect", { width: true, height: true, fill: true }, 1);
			children(rect).forEach(detach_dev);
			mask_nodes.forEach(detach_dev);
			g = claim_element(svg_nodes, "g", { mask: true }, 1);
			var g_nodes = children(g);

			path1 = claim_element(
				g_nodes,
				"path",
				{
					"fill-rule": true,
					"clip-rule": true,
					d: true,
					fill: true
				},
				1
			);

			children(path1).forEach(detach_dev);
			g_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path0, "fill-rule", "evenodd");
			attr_dev(path0, "clip-rule", "evenodd");
			attr_dev(path0, "d", "M35.7223 5.77236C35.7223 2.58438 33.1379 0 29.9499 0V0C26.7619 0 24.1775 2.58437\n            24.1775 5.77236V118.228C24.1775 121.416 26.7619 124 29.9499 124V124C33.1379 124 35.7223\n            121.416 35.7223 118.228V5.77236ZM53.039 0C49.8511 0 47.2668 2.58431 47.2668\n            5.77221V118.228C47.2668 121.416 49.8511 124 53.039 124V124C56.2269 124 58.8112 121.416\n            58.8112 118.228V5.77221C58.8112 2.5843 56.2269 0 53.039 0V0ZM81.9005 118.228C81.9005\n            121.416 79.3161 124 76.1281 124V124C72.9401 124 70.3558 121.416 70.3558\n            118.228V5.77236C70.3558 2.58438 72.9401 0 76.1281 0V0C79.3161 0 81.9005 2.58437 81.9005\n            5.77236V118.228ZM93.4451 118.228C93.4451 121.416 96.0294 124 99.2173 124V124C102.405 124\n            104.989 121.416 104.989 118.228V5.7722C104.989 2.5843 102.405 0 99.2173 0V0C96.0294 0\n            93.4451 2.5843 93.4451 5.7722V118.228ZM128.079 118.228C128.079 121.416 125.494 124\n            122.306 124V124C119.118 124 116.534 121.416 116.534 118.228V5.77236C116.534 2.58438\n            119.118 0 122.306 0V0C125.494 0 128.079 2.58437 128.079 5.77236V118.228ZM139.623\n            118.228C139.623 121.416 142.208 124 145.396 124V124C148.583 124 151.168 121.416 151.168\n            118.228V5.77221C151.168 2.58431 148.583 0 145.396 0V0C142.208 0 139.623 2.58431 139.623\n            5.77221V118.228ZM174.257 118.228C174.257 121.416 171.673 124 168.485 124V124C165.297 124\n            162.712 121.416 162.712 118.228V5.77237C162.712 2.58438 165.297 0 168.485 0V0C171.673 0\n            174.257 2.58438 174.257 5.77237V118.228ZM185.802 118.228C185.802 121.416 188.386 124\n            191.574 124V124C194.762 124 197.346 121.416 197.346 118.228V5.77221C197.346 2.58431\n            194.762 0 191.574 0V0C188.386 0 185.802 2.58431 185.802 5.77221V118.228ZM220.435\n            118.228C220.435 121.416 217.851 124 214.663 124V124C211.475 124 208.891 121.416 208.891\n            118.228V5.77221C208.891 2.58431 211.475 0 214.663 0V0C217.851 0 220.435 2.58431 220.435\n            5.77221V118.228ZM231.979 118.228C231.979 121.416 234.564 124 237.752 124V124C240.94 124\n            243.524 121.416 243.524 118.228V5.77237C243.524 2.58438 240.94 0 237.752 0V0C234.564 0\n            231.979 2.58438 231.979 5.77237V118.228ZM266.613 118.228C266.613 121.416 264.029 124\n            260.841 124V124C257.653 124 255.069 121.416 255.069 118.228V5.77222C255.069 2.58431\n            257.653 0 260.841 0V0C264.029 0 266.613 2.58431 266.613 5.77222V62V118.228ZM278.158\n            118.228C278.158 121.416 280.742 124 283.93 124V124C287.118 124 289.702 121.416 289.702\n            118.228V5.77237C289.702 2.58438 287.118 0 283.93 0V0C280.742 0 278.158 2.58438 278.158\n            5.77237V118.228ZM312.791 118.228C312.791 121.416 310.207 124 307.019 124V124C303.831 124\n            301.247 121.416 301.247 118.228V5.77219C301.247 2.5843 303.831 0 307.019 0V0C310.207 0\n            312.791 2.5843 312.791 5.77219V118.228ZM324.336 118.228C324.336 121.416 326.92 124\n            330.108 124V124C333.296 124 335.88 121.416 335.88 118.228V5.7722C335.88 2.5843 333.296 0\n            330.108 0V0C326.92 0 324.336 2.58431 324.336 5.7722V118.228ZM358.97 118.228C358.97\n            121.416 356.385 124 353.197 124V124C350.009 124 347.425 121.416 347.425\n            118.228V5.77237C347.425 2.58438 350.009 0 353.197 0V0C356.385 0 358.97 2.58438 358.97\n            5.77237V118.228ZM370.514 118.228C370.514 121.416 373.098 124 376.286 124V124C379.474 124\n            382.059 121.416 382.059 118.228V5.7722C382.059 2.5843 379.474 0 376.286 0V0C373.098 0\n            370.514 2.58431 370.514 5.7722V118.228ZM405.148 118.228C405.148 121.416 402.564 124\n            399.376 124V124C396.188 124 393.603 121.416 393.603 118.228V5.77237C393.603 2.58438\n            396.188 0 399.376 0V0C402.564 0 405.148 2.58438 405.148 5.77237V118.228ZM416.692\n            118.228C416.692 121.416 419.277 124 422.465 124V124C425.653 124 428.237 121.416 428.237\n            118.228V5.77219C428.237 2.5843 425.653 0 422.465 0V0C419.277 0 416.692 2.5843 416.692\n            5.77219V118.228ZM451.326 118.228C451.326 121.416 448.742 124 445.554 124V124C442.366 124\n            439.781 121.416 439.781 118.228V5.77237C439.781 2.58438 442.366 0 445.554 0V0C448.742 0\n            451.326 2.58438 451.326 5.77237V118.228ZM1.08862 5.77218C1.08862 2.58429 3.67292 0\n            6.8608 0V0C10.0487 0 12.633 2.5843 12.633 5.77218V118.228C12.633 121.416 10.0487 124\n            6.8608 124V124C3.67292 124 1.08862 121.416 1.08862 118.228V5.77218Z");
			attr_dev(path0, "fill", "#E0294A");
			add_location(path0, file, 35, 8, 627);
			attr_dev(rect, "width", /*prcvstr*/ ctx[0]);
			attr_dev(rect, "height", "124");
			attr_dev(rect, "fill", "white");
			add_location(rect, file, 94, 12, 5485);
			attr_dev(mask, "id", mask_id_value = "mask" + /*id*/ ctx[1]);
			attr_dev(mask, "mask-type", "alpha");
			attr_dev(mask, "maskUnits", "userSpaceOnUse");
			attr_dev(mask, "x", "0");
			attr_dev(mask, "y", "0");
			attr_dev(mask, "width", "100%");
			attr_dev(mask, "height", "100%");
			add_location(mask, file, 86, 8, 5284);
			attr_dev(path1, "fill-rule", "evenodd");
			attr_dev(path1, "clip-rule", "evenodd");
			attr_dev(path1, "d", "M35.7223 5.77236C35.7223 2.58438 33.1379 0 29.9499 0V0C26.7619 0 24.1775 2.58437\n                24.1775 5.77236V118.228C24.1775 121.416 26.7619 124 29.9499 124V124C33.1379 124\n                35.7223 121.416 35.7223 118.228V5.77236ZM53.039 0C49.8511 0 47.2668 2.58431 47.2668\n                5.77221V118.228C47.2668 121.416 49.8511 124 53.039 124V124C56.2269 124 58.8112\n                121.416 58.8112 118.228V5.77221C58.8112 2.5843 56.2269 0 53.039 0V0ZM81.9005\n                118.228C81.9005 121.416 79.3161 124 76.1281 124V124C72.9401 124 70.3558 121.416\n                70.3558 118.228V5.77236C70.3558 2.58438 72.9401 0 76.1281 0V0C79.3161 0 81.9005\n                2.58437 81.9005 5.77236V118.228ZM93.4451 118.228C93.4451 121.416 96.0294 124 99.2173\n                124V124C102.405 124 104.989 121.416 104.989 118.228V5.7722C104.989 2.5843 102.405 0\n                99.2173 0V0C96.0294 0 93.4451 2.5843 93.4451 5.7722V118.228ZM128.079 118.228C128.079\n                121.416 125.494 124 122.306 124V124C119.118 124 116.534 121.416 116.534\n                118.228V5.77236C116.534 2.58438 119.118 0 122.306 0V0C125.494 0 128.079 2.58437\n                128.079 5.77236V118.228ZM139.623 118.228C139.623 121.416 142.208 124 145.396\n                124V124C148.583 124 151.168 121.416 151.168 118.228V5.77221C151.168 2.58431 148.583\n                0 145.396 0V0C142.208 0 139.623 2.58431 139.623 5.77221V118.228ZM174.257\n                118.228C174.257 121.416 171.673 124 168.485 124V124C165.297 124 162.712 121.416\n                162.712 118.228V5.77237C162.712 2.58438 165.297 0 168.485 0V0C171.673 0 174.257\n                2.58438 174.257 5.77237V118.228ZM185.802 118.228C185.802 121.416 188.386 124 191.574\n                124V124C194.762 124 197.346 121.416 197.346 118.228V5.77221C197.346 2.58431 194.762\n                0 191.574 0V0C188.386 0 185.802 2.58431 185.802 5.77221V118.228ZM220.435\n                118.228C220.435 121.416 217.851 124 214.663 124V124C211.475 124 208.891 121.416\n                208.891 118.228V5.77221C208.891 2.58431 211.475 0 214.663 0V0C217.851 0 220.435\n                2.58431 220.435 5.77221V118.228ZM231.979 118.228C231.979 121.416 234.564 124 237.752\n                124V124C240.94 124 243.524 121.416 243.524 118.228V5.77237C243.524 2.58438 240.94 0\n                237.752 0V0C234.564 0 231.979 2.58438 231.979 5.77237V118.228ZM266.613\n                118.228C266.613 121.416 264.029 124 260.841 124V124C257.653 124 255.069 121.416\n                255.069 118.228V5.77222C255.069 2.58431 257.653 0 260.841 0V0C264.029 0 266.613\n                2.58432 266.613 5.77223V118.228ZM278.158 118.228C278.158 121.416 280.742 124 283.93\n                124V124C287.118 124 289.702 121.416 289.702 118.228V5.77237C289.702 2.58438 287.118\n                0 283.93 0V0C280.742 0 278.158 2.58438 278.158 5.77237V118.228ZM312.791\n                118.228C312.791 121.416 310.207 124 307.019 124V124C303.831 124 301.247 121.416\n                301.247 118.228V5.77219C301.247 2.5843 303.831 0 307.019 0V0C310.207 0 312.791\n                2.5843 312.791 5.77219V118.228ZM324.336 118.228C324.336 121.416 326.92 124 330.108\n                124V124C333.296 124 335.88 121.416 335.88 118.228V5.7722C335.88 2.5843 333.296 0\n                330.108 0V0C326.92 0 324.336 2.58431 324.336 5.7722V118.228ZM358.97 118.228C358.97\n                121.416 356.385 124 353.197 124V124C350.009 124 347.425 121.416 347.425\n                118.228V5.77237C347.425 2.58438 350.009 0 353.197 0V0C356.385 0 358.97 2.58438\n                358.97 5.77237V118.228ZM370.514 118.228C370.514 121.416 373.098 124 376.286\n                124V124C379.474 124 382.059 121.416 382.059 118.228V5.7722C382.059 2.5843 379.474 0\n                376.286 0V0C373.098 0 370.514 2.58431 370.514 5.7722V118.228ZM405.148\n                118.228C405.148 121.416 402.564 124 399.376 124V124C396.188 124 393.603 121.416\n                393.603 118.228V5.77237C393.603 2.58438 396.188 0 399.376 0V0C402.564 0 405.148\n                2.58438 405.148 5.77237V118.228ZM416.692 118.228C416.692 121.416 419.277 124 422.465\n                124V124C425.653 124 428.237 121.416 428.237 118.228V5.77219C428.237 2.5843 425.653 0\n                422.465 0V0C419.277 0 416.692 2.5843 416.692 5.77219V118.228ZM451.326\n                118.228C451.326 121.416 448.742 124 445.554 124V124C442.366 124 439.781 121.416\n                439.781 118.228V5.77237C439.781 2.58438 442.366 0 445.554 0V0C448.742 0 451.326\n                2.58438 451.326 5.77237V118.228ZM1.08862 5.77218C1.08862 2.58429 3.67292 0 6.8608\n                0V0C10.0487 0 12.633 2.5843 12.633 5.77218V118.228C12.633 121.416 10.0487 124 6.8608\n                124V124C3.67292 124 1.08862 121.416 1.08862 118.228V5.77218Z");
			attr_dev(path1, "fill", "#02C076");
			add_location(path1, file, 97, 12, 5598);
			attr_dev(g, "mask", g_mask_value = "url(#mask" + /*id*/ ctx[1] + ")");
			add_location(g, file, 96, 8, 5560);
			attr_dev(svg, "width", "100%");
			attr_dev(svg, "height", "100%");
			attr_dev(svg, "viewBox", "0 0 452 124");
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			set_style(svg, "filter", "grayscale(" + /*opacity*/ ctx[2] + ")");
			add_location(svg, file, 27, 4, 431);
			attr_dev(main, "class", "svelte-m6qgj6");
			add_location(main, file, 26, 0, 420);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			append_dev(main, svg);
			append_dev(svg, path0);
			append_dev(svg, mask);
			append_dev(mask, rect);
			append_dev(svg, g);
			append_dev(g, path1);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*prcvstr*/ 1) {
				attr_dev(rect, "width", /*prcvstr*/ ctx[0]);
			}

			if (dirty & /*id*/ 2 && mask_id_value !== (mask_id_value = "mask" + /*id*/ ctx[1])) {
				attr_dev(mask, "id", mask_id_value);
			}

			if (dirty & /*id*/ 2 && g_mask_value !== (g_mask_value = "url(#mask" + /*id*/ ctx[1] + ")")) {
				attr_dev(g, "mask", g_mask_value);
			}

			if (dirty & /*opacity*/ 4) {
				set_style(svg, "filter", "grayscale(" + /*opacity*/ ctx[2] + ")");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { procvlozh } = $$props;
	let { id } = $$props;
	let { prcvstr } = $$props;
	let { onoff } = $$props;
	let opacity;
	console.log(onoff);

	if (onoff == true || id == "sumprocvlozh") {
		opacity = 0;
	} else {
		opacity = 1;
	}

	const writable_props = ["procvlozh", "id", "prcvstr", "onoff"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<IndLoad> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("IndLoad", $$slots, []);

	$$self.$set = $$props => {
		if ("procvlozh" in $$props) $$invalidate(3, procvlozh = $$props.procvlozh);
		if ("id" in $$props) $$invalidate(1, id = $$props.id);
		if ("prcvstr" in $$props) $$invalidate(0, prcvstr = $$props.prcvstr);
		if ("onoff" in $$props) $$invalidate(4, onoff = $$props.onoff);
	};

	$$self.$capture_state = () => ({ procvlozh, id, prcvstr, onoff, opacity });

	$$self.$inject_state = $$props => {
		if ("procvlozh" in $$props) $$invalidate(3, procvlozh = $$props.procvlozh);
		if ("id" in $$props) $$invalidate(1, id = $$props.id);
		if ("prcvstr" in $$props) $$invalidate(0, prcvstr = $$props.prcvstr);
		if ("onoff" in $$props) $$invalidate(4, onoff = $$props.onoff);
		if ("opacity" in $$props) $$invalidate(2, opacity = $$props.opacity);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*procvlozh*/ 8) {
			 if (procvlozh) {
				$$invalidate(0, prcvstr = procvlozh + "%");
			} else {
				$$invalidate(0, prcvstr = "0");
			}
		}
	};

	return [prcvstr, id, opacity, procvlozh, onoff];
}

class IndLoad extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			procvlozh: 3,
			id: 1,
			prcvstr: 0,
			onoff: 4
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "IndLoad",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*procvlozh*/ ctx[3] === undefined && !("procvlozh" in props)) {
			console_1.warn("<IndLoad> was created without expected prop 'procvlozh'");
		}

		if (/*id*/ ctx[1] === undefined && !("id" in props)) {
			console_1.warn("<IndLoad> was created without expected prop 'id'");
		}

		if (/*prcvstr*/ ctx[0] === undefined && !("prcvstr" in props)) {
			console_1.warn("<IndLoad> was created without expected prop 'prcvstr'");
		}

		if (/*onoff*/ ctx[4] === undefined && !("onoff" in props)) {
			console_1.warn("<IndLoad> was created without expected prop 'onoff'");
		}
	}

	get procvlozh() {
		throw new Error("<IndLoad>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set procvlozh(value) {
		throw new Error("<IndLoad>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get id() {
		throw new Error("<IndLoad>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<IndLoad>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get prcvstr() {
		throw new Error("<IndLoad>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prcvstr(value) {
		throw new Error("<IndLoad>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onoff() {
		throw new Error("<IndLoad>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onoff(value) {
		throw new Error("<IndLoad>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/BotsList.svelte generated by Svelte v3.24.0 */

const { Object: Object_1, console: console_1$1 } = globals;

const file$1 = "src/components/BotsList.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[30] = list[i][0];
	child_ctx[31] = list[i][1];
	return child_ctx;
}

// (293:4) {:else}
function create_else_block(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Ни одного бота не создано");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Ни одного бота не создано");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$1, 294, 6, 7274);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(293:4) {:else}",
		ctx
	});

	return block;
}

// (270:4) {#each Object.entries(bots) as [id, data]}
function create_each_block(ctx) {
	let a;
	let div0;
	let t0_value = /*data*/ ctx[31][1] + "";
	let t0;
	let t1;
	let div1;
	let span0;
	let t2_value = /*data*/ ctx[31][2] + "";
	let t2;
	let t3;
	let br0;
	let t4;
	let span1;
	let t5;
	let t6_value = /*data*/ ctx[31][3] + "";
	let t6;
	let t7;
	let t8;
	let br1;
	let t9;
	let div2;
	let span2;
	let t10_value = /*data*/ ctx[31][4] + "";
	let t10;
	let t11;
	let br2;
	let t12;
	let span3;
	let t13;
	let t14_value = /*data*/ ctx[31][5] + "";
	let t14;
	let t15;
	let t16;
	let br3;
	let t17;
	let div3;
	let indload;
	let t18;
	let current;
	let mounted;
	let dispose;

	indload = new IndLoad({
			props: {
				procvlozh: /*data*/ ctx[31][9],
				id: /*id*/ ctx[30],
				onoff: /*data*/ ctx[31][0]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			a = element("a");
			div0 = element("div");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			span0 = element("span");
			t2 = text(t2_value);
			t3 = space();
			br0 = element("br");
			t4 = space();
			span1 = element("span");
			t5 = text("(");
			t6 = text(t6_value);
			t7 = text(" %)");
			t8 = space();
			br1 = element("br");
			t9 = space();
			div2 = element("div");
			span2 = element("span");
			t10 = text(t10_value);
			t11 = space();
			br2 = element("br");
			t12 = space();
			span3 = element("span");
			t13 = text("(");
			t14 = text(t14_value);
			t15 = text(" %)");
			t16 = space();
			br3 = element("br");
			t17 = space();
			div3 = element("div");
			create_component(indload.$$.fragment);
			t18 = space();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			div0 = claim_element(a_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, t0_value);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			div1 = claim_element(a_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			span0 = claim_element(div1_nodes, "SPAN", {});
			var span0_nodes = children(span0);
			t2 = claim_text(span0_nodes, t2_value);
			span0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			br0 = claim_element(div1_nodes, "BR", {});
			t4 = claim_space(div1_nodes);
			span1 = claim_element(div1_nodes, "SPAN", {});
			var span1_nodes = children(span1);
			t5 = claim_text(span1_nodes, "(");
			t6 = claim_text(span1_nodes, t6_value);
			t7 = claim_text(span1_nodes, " %)");
			span1_nodes.forEach(detach_dev);
			t8 = claim_space(div1_nodes);
			br1 = claim_element(div1_nodes, "BR", {});
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(a_nodes);
			div2 = claim_element(a_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			span2 = claim_element(div2_nodes, "SPAN", {});
			var span2_nodes = children(span2);
			t10 = claim_text(span2_nodes, t10_value);
			span2_nodes.forEach(detach_dev);
			t11 = claim_space(div2_nodes);
			br2 = claim_element(div2_nodes, "BR", {});
			t12 = claim_space(div2_nodes);
			span3 = claim_element(div2_nodes, "SPAN", {});
			var span3_nodes = children(span3);
			t13 = claim_text(span3_nodes, "(");
			t14 = claim_text(span3_nodes, t14_value);
			t15 = claim_text(span3_nodes, " %)");
			span3_nodes.forEach(detach_dev);
			t16 = claim_space(div2_nodes);
			br3 = claim_element(div2_nodes, "BR", {});
			div2_nodes.forEach(detach_dev);
			t17 = claim_space(a_nodes);
			div3 = claim_element(a_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			claim_component(indload.$$.fragment, div3_nodes);
			div3_nodes.forEach(detach_dev);
			t18 = claim_space(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "leftitem svelte-upqpsm");
			add_location(div0, file$1, 271, 8, 6719);
			add_location(span0, file$1, 274, 10, 6803);
			add_location(br0, file$1, 275, 10, 6836);
			add_location(span1, file$1, 276, 10, 6853);
			add_location(br1, file$1, 277, 10, 6890);
			attr_dev(div1, "class", "centereditem svelte-upqpsm");
			add_location(div1, file$1, 273, 8, 6766);
			add_location(span2, file$1, 280, 10, 6957);
			add_location(br2, file$1, 281, 10, 6990);
			add_location(span3, file$1, 282, 10, 7007);
			add_location(br3, file$1, 283, 10, 7044);
			attr_dev(div2, "class", "centereditem svelte-upqpsm");
			add_location(div2, file$1, 279, 8, 6920);
			attr_dev(div3, "class", "rightitem svelte-upqpsm");
			add_location(div3, file$1, 285, 8, 7074);
			attr_dev(a, "class", "botitem p-2 svelte-upqpsm");
			attr_dev(a, "href", "botstatuspage");
			add_location(a, file$1, 270, 6, 6637);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, div0);
			append_dev(div0, t0);
			append_dev(a, t1);
			append_dev(a, div1);
			append_dev(div1, span0);
			append_dev(span0, t2);
			append_dev(div1, t3);
			append_dev(div1, br0);
			append_dev(div1, t4);
			append_dev(div1, span1);
			append_dev(span1, t5);
			append_dev(span1, t6);
			append_dev(span1, t7);
			append_dev(div1, t8);
			append_dev(div1, br1);
			append_dev(a, t9);
			append_dev(a, div2);
			append_dev(div2, span2);
			append_dev(span2, t10);
			append_dev(div2, t11);
			append_dev(div2, br2);
			append_dev(div2, t12);
			append_dev(div2, span3);
			append_dev(span3, t13);
			append_dev(span3, t14);
			append_dev(span3, t15);
			append_dev(div2, t16);
			append_dev(div2, br3);
			append_dev(a, t17);
			append_dev(a, div3);
			mount_component(indload, div3, null);
			append_dev(a, t18);
			current = true;

			if (!mounted) {
				dispose = listen_dev(
					a,
					"click",
					function () {
						if (is_function(/*entryBot*/ ctx[10](/*data*/ ctx[31][1]))) /*entryBot*/ ctx[10](/*data*/ ctx[31][1]).apply(this, arguments);
					},
					false,
					false,
					false
				);

				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if ((!current || dirty[0] & /*bots*/ 1) && t0_value !== (t0_value = /*data*/ ctx[31][1] + "")) set_data_dev(t0, t0_value);
			if ((!current || dirty[0] & /*bots*/ 1) && t2_value !== (t2_value = /*data*/ ctx[31][2] + "")) set_data_dev(t2, t2_value);
			if ((!current || dirty[0] & /*bots*/ 1) && t6_value !== (t6_value = /*data*/ ctx[31][3] + "")) set_data_dev(t6, t6_value);
			if ((!current || dirty[0] & /*bots*/ 1) && t10_value !== (t10_value = /*data*/ ctx[31][4] + "")) set_data_dev(t10, t10_value);
			if ((!current || dirty[0] & /*bots*/ 1) && t14_value !== (t14_value = /*data*/ ctx[31][5] + "")) set_data_dev(t14, t14_value);
			const indload_changes = {};
			if (dirty[0] & /*bots*/ 1) indload_changes.procvlozh = /*data*/ ctx[31][9];
			if (dirty[0] & /*bots*/ 1) indload_changes.id = /*id*/ ctx[30];
			if (dirty[0] & /*bots*/ 1) indload_changes.onoff = /*data*/ ctx[31][0];
			indload.$set(indload_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(indload.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(indload.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			destroy_component(indload);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(270:4) {#each Object.entries(bots) as [id, data]}",
		ctx
	});

	return block;
}

// (299:4) <Button href="newbot" light outlined on:click={routNewBot}>
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text(" Новый бот ");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, " Новый бот ");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(299:4) <Button href=\\\"newbot\\\" light outlined on:click={routNewBot}>",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let main;
	let div4;
	let div0;
	let label0;
	let t0;
	let t1;
	let div1;
	let label1;
	let t2;
	let t3;
	let br0;
	let t4;
	let span0;
	let t5;
	let t6;
	let div2;
	let label2;
	let t7;
	let t8;
	let br1;
	let t9;
	let span1;
	let t10;
	let t11;
	let div3;
	let label3;
	let t12;
	let t13;
	let br2;
	let t14;
	let span2;
	let t15_value = (/*balances*/ ctx[7] - /*startbalances*/ ctx[6]).toFixed(2) + "";
	let t15;
	let t16;
	let div9;
	let div5;
	let label4;
	let t17;
	let t18;
	let div6;
	let label5;
	let t19;
	let t20;
	let br3;
	let t21;
	let span3;
	let t22;
	let t23;
	let div7;
	let label6;
	let t24;
	let t25;
	let br4;
	let t26;
	let span4;
	let t27;
	let t28;
	let div8;
	let label7;
	let t29;
	let t30;
	let br5;
	let t31;
	let span5;
	let t32;
	let t33;
	let div14;
	let div10;
	let t34;
	let t35;
	let div11;
	let t36;
	let br6;
	let t37;
	let t38;
	let t39;
	let t40;
	let div12;
	let t41;
	let br7;
	let t42;
	let t43;
	let t44;
	let t45;
	let div13;
	let indload;
	let t46;
	let div15;
	let hr;
	let t47;
	let div16;
	let t48;
	let div17;
	let button;
	let current;

	indload = new IndLoad({
			props: {
				procvlozh: /*sumprocvlozh*/ ctx[8],
				id: "sumprocvlozh"
			},
			$$inline: true
		});

	let each_value = Object.entries(/*bots*/ ctx[0]);
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	let each_1_else = null;

	if (!each_value.length) {
		each_1_else = create_else_block(ctx);
	}

	button = new Button({
			props: {
				href: "newbot",
				light: true,
				outlined: true,
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*routNewBot*/ ctx[9]);

	const block = {
		c: function create() {
			main = element("main");
			div4 = element("div");
			div0 = element("div");
			label0 = element("label");
			t0 = text("Баланс");
			t1 = space();
			div1 = element("div");
			label1 = element("label");
			t2 = text("Старт");
			t3 = space();
			br0 = element("br");
			t4 = space();
			span0 = element("span");
			t5 = text(/*startbalances*/ ctx[6]);
			t6 = space();
			div2 = element("div");
			label2 = element("label");
			t7 = text("Сегодня");
			t8 = space();
			br1 = element("br");
			t9 = space();
			span1 = element("span");
			t10 = text(/*balances*/ ctx[7]);
			t11 = space();
			div3 = element("div");
			label3 = element("label");
			t12 = text("Cальдо");
			t13 = space();
			br2 = element("br");
			t14 = space();
			span2 = element("span");
			t15 = text(t15_value);
			t16 = space();
			div9 = element("div");
			div5 = element("div");
			label4 = element("label");
			t17 = text("Сделки");
			t18 = space();
			div6 = element("div");
			label5 = element("label");
			t19 = text("Кол-во");
			t20 = space();
			br3 = element("br");
			t21 = space();
			span3 = element("span");
			t22 = text(/*kolvoleads*/ ctx[1]);
			t23 = space();
			div7 = element("div");
			label6 = element("label");
			t24 = text("Итог");
			t25 = space();
			br4 = element("br");
			t26 = space();
			span4 = element("span");
			t27 = text(/*sumleads*/ ctx[2]);
			t28 = space();
			div8 = element("div");
			label7 = element("label");
			t29 = text("Среднее");
			t30 = space();
			br5 = element("br");
			t31 = space();
			span5 = element("span");
			t32 = text(/*srleads*/ ctx[3]);
			t33 = space();
			div14 = element("div");
			div10 = element("div");
			t34 = text("Прибыль / просадка");
			t35 = text("\n      \n    ");
			div11 = element("div");
			t36 = text("Всего\n      ");
			br6 = element("br");
			t37 = space();
			t38 = text(/*profitsumproc*/ ctx[5]);
			t39 = text(" %");
			t40 = space();
			div12 = element("div");
			t41 = text("Сегодня\n      ");
			br7 = element("br");
			t42 = space();
			t43 = text(/*profitsumproctoday*/ ctx[4]);
			t44 = text(" %");
			t45 = space();
			div13 = element("div");
			create_component(indload.$$.fragment);
			t46 = space();
			div15 = element("div");
			hr = element("hr");
			t47 = space();
			div16 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			if (each_1_else) {
				each_1_else.c();
			}

			t48 = space();
			div17 = element("div");
			create_component(button.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			div4 = claim_element(main_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div0 = claim_element(div4_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			label0 = claim_element(div0_nodes, "LABEL", {});
			var label0_nodes = children(label0);
			t0 = claim_text(label0_nodes, "Баланс");
			label0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			label1 = claim_element(div1_nodes, "LABEL", {});
			var label1_nodes = children(label1);
			t2 = claim_text(label1_nodes, "Старт");
			label1_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			br0 = claim_element(div1_nodes, "BR", {});
			t4 = claim_space(div1_nodes);
			span0 = claim_element(div1_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t5 = claim_text(span0_nodes, /*startbalances*/ ctx[6]);
			span0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t6 = claim_space(div4_nodes);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label2 = claim_element(div2_nodes, "LABEL", {});
			var label2_nodes = children(label2);
			t7 = claim_text(label2_nodes, "Сегодня");
			label2_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			br1 = claim_element(div2_nodes, "BR", {});
			t9 = claim_space(div2_nodes);
			span1 = claim_element(div2_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t10 = claim_text(span1_nodes, /*balances*/ ctx[7]);
			span1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t11 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label3 = claim_element(div3_nodes, "LABEL", {});
			var label3_nodes = children(label3);
			t12 = claim_text(label3_nodes, "Cальдо");
			label3_nodes.forEach(detach_dev);
			t13 = claim_space(div3_nodes);
			br2 = claim_element(div3_nodes, "BR", {});
			t14 = claim_space(div3_nodes);
			span2 = claim_element(div3_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t15 = claim_text(span2_nodes, t15_value);
			span2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t16 = claim_space(main_nodes);
			div9 = claim_element(main_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div5 = claim_element(div9_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			label4 = claim_element(div5_nodes, "LABEL", {});
			var label4_nodes = children(label4);
			t17 = claim_text(label4_nodes, "Сделки");
			label4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t18 = claim_space(div9_nodes);
			div6 = claim_element(div9_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label5 = claim_element(div6_nodes, "LABEL", {});
			var label5_nodes = children(label5);
			t19 = claim_text(label5_nodes, "Кол-во");
			label5_nodes.forEach(detach_dev);
			t20 = claim_space(div6_nodes);
			br3 = claim_element(div6_nodes, "BR", {});
			t21 = claim_space(div6_nodes);
			span3 = claim_element(div6_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			t22 = claim_text(span3_nodes, /*kolvoleads*/ ctx[1]);
			span3_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t23 = claim_space(div9_nodes);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label6 = claim_element(div7_nodes, "LABEL", {});
			var label6_nodes = children(label6);
			t24 = claim_text(label6_nodes, "Итог");
			label6_nodes.forEach(detach_dev);
			t25 = claim_space(div7_nodes);
			br4 = claim_element(div7_nodes, "BR", {});
			t26 = claim_space(div7_nodes);
			span4 = claim_element(div7_nodes, "SPAN", { class: true });
			var span4_nodes = children(span4);
			t27 = claim_text(span4_nodes, /*sumleads*/ ctx[2]);
			span4_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t28 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			label7 = claim_element(div8_nodes, "LABEL", {});
			var label7_nodes = children(label7);
			t29 = claim_text(label7_nodes, "Среднее");
			label7_nodes.forEach(detach_dev);
			t30 = claim_space(div8_nodes);
			br5 = claim_element(div8_nodes, "BR", {});
			t31 = claim_space(div8_nodes);
			span5 = claim_element(div8_nodes, "SPAN", { class: true });
			var span5_nodes = children(span5);
			t32 = claim_text(span5_nodes, /*srleads*/ ctx[3]);
			span5_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t33 = claim_space(main_nodes);
			div14 = claim_element(main_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div10 = claim_element(div14_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			t34 = claim_text(div10_nodes, "Прибыль / просадка");
			div10_nodes.forEach(detach_dev);
			t35 = claim_text(div14_nodes, "\n      \n    ");
			div11 = claim_element(div14_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			t36 = claim_text(div11_nodes, "Всего\n      ");
			br6 = claim_element(div11_nodes, "BR", {});
			t37 = claim_space(div11_nodes);
			t38 = claim_text(div11_nodes, /*profitsumproc*/ ctx[5]);
			t39 = claim_text(div11_nodes, " %");
			div11_nodes.forEach(detach_dev);
			t40 = claim_space(div14_nodes);
			div12 = claim_element(div14_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			t41 = claim_text(div12_nodes, "Сегодня\n      ");
			br7 = claim_element(div12_nodes, "BR", {});
			t42 = claim_space(div12_nodes);
			t43 = claim_text(div12_nodes, /*profitsumproctoday*/ ctx[4]);
			t44 = claim_text(div12_nodes, " %");
			div12_nodes.forEach(detach_dev);
			t45 = claim_space(div14_nodes);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			claim_component(indload.$$.fragment, div13_nodes);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			t46 = claim_space(main_nodes);
			div15 = claim_element(main_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			hr = claim_element(div15_nodes, "HR", { width: true });
			div15_nodes.forEach(detach_dev);
			t47 = claim_space(main_nodes);
			div16 = claim_element(main_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div16_nodes);
			}

			if (each_1_else) {
				each_1_else.l(div16_nodes);
			}

			div16_nodes.forEach(detach_dev);
			t48 = claim_space(main_nodes);
			div17 = claim_element(main_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			claim_component(button.$$.fragment, div17_nodes);
			div17_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(label0, file$1, 174, 6, 4262);
			attr_dev(div0, "class", "rowbalanceitem balancehead svelte-upqpsm");
			add_location(div0, file$1, 173, 4, 4215);
			add_location(label1, file$1, 178, 6, 4335);
			add_location(br0, file$1, 179, 6, 4362);
			attr_dev(span0, "class", "border-solid border-2 border-gray-200 bg-gray-200 rounded-full\n        px-3 py-1 text-sm font-semibold text-gray-700");
			add_location(span0, file$1, 180, 6, 4375);
			attr_dev(div1, "class", "rowbalanceitem svelte-upqpsm");
			add_location(div1, file$1, 177, 4, 4300);
			add_location(label2, file$1, 188, 6, 4610);
			add_location(br1, file$1, 189, 6, 4639);
			attr_dev(span1, "class", "border-solid border-2 border-gray-200 bg-gray-200 rounded-full\n        px-3 py-1 text-sm font-semibold text-gray-700");
			add_location(span1, file$1, 190, 6, 4652);
			attr_dev(div2, "class", "rowbalanceitem svelte-upqpsm");
			add_location(div2, file$1, 187, 4, 4575);
			add_location(label3, file$1, 198, 6, 4882);
			add_location(br2, file$1, 199, 6, 4910);
			attr_dev(span2, "class", "border-solid border-2 border-gray-600 rounded-full px-3 py-1\n        text-sm font-semibold text-gray-700 dark:text-primary-700");
			add_location(span2, file$1, 200, 6, 4923);
			attr_dev(div3, "class", "rowbalanceitem svelte-upqpsm");
			add_location(div3, file$1, 197, 4, 4847);
			attr_dev(div4, "class", "textitem px-2 py-3 svelte-upqpsm");
			add_location(div4, file$1, 172, 2, 4178);
			add_location(label4, file$1, 210, 6, 5248);
			attr_dev(div5, "class", "rowbalanceitem balancehead svelte-upqpsm");
			add_location(div5, file$1, 209, 4, 5201);
			add_location(label5, file$1, 214, 6, 5321);
			add_location(br3, file$1, 215, 6, 5349);
			attr_dev(span3, "class", "border-solid border-2 border-gray-200 bg-gray-200 rounded-full\n        px-3 py-1 text-sm font-semibold text-gray-700");
			add_location(span3, file$1, 216, 6, 5362);
			attr_dev(div6, "class", "rowbalanceitem svelte-upqpsm");
			add_location(div6, file$1, 213, 4, 5286);
			add_location(label6, file$1, 224, 6, 5594);
			add_location(br4, file$1, 225, 6, 5620);
			attr_dev(span4, "class", "border-solid border-2 border-gray-200 bg-gray-200 rounded-full\n        px-3 py-1 text-sm font-semibold text-gray-700");
			add_location(span4, file$1, 226, 6, 5633);
			attr_dev(div7, "class", "rowbalanceitem svelte-upqpsm");
			add_location(div7, file$1, 223, 4, 5559);
			add_location(label7, file$1, 234, 6, 5863);
			add_location(br5, file$1, 235, 6, 5892);
			attr_dev(span5, "class", "border-solid border-2 border-gray-200 bg-gray-200 rounded-full\n        px-3 py-1 text-sm font-semibold text-gray-700");
			add_location(span5, file$1, 236, 6, 5905);
			attr_dev(div8, "class", "rowbalanceitem svelte-upqpsm");
			add_location(div8, file$1, 233, 4, 5828);
			attr_dev(div9, "class", "textitem px-2 py-3 svelte-upqpsm");
			add_location(div9, file$1, 208, 2, 5164);
			attr_dev(div10, "class", "leftitem svelte-upqpsm");
			add_location(div10, file$1, 246, 4, 6138);
			add_location(br6, file$1, 250, 6, 6251);
			attr_dev(div11, "class", "centereditem svelte-upqpsm");
			add_location(div11, file$1, 248, 4, 6206);
			add_location(br7, file$1, 255, 6, 6344);
			attr_dev(div12, "class", "centereditem svelte-upqpsm");
			add_location(div12, file$1, 253, 4, 6297);
			attr_dev(div13, "class", "rightitem svelte-upqpsm");
			add_location(div13, file$1, 258, 4, 6395);
			attr_dev(div14, "class", "textitem p-2 svelte-upqpsm");
			add_location(div14, file$1, 245, 2, 6107);
			attr_dev(hr, "width", "400px");
			add_location(hr, file$1, 264, 4, 6527);
			attr_dev(div15, "class", "divhr svelte-upqpsm");
			add_location(div15, file$1, 263, 2, 6503);
			attr_dev(div16, "class", "botslist svelte-upqpsm");
			add_location(div16, file$1, 267, 2, 6560);
			attr_dev(div17, "class", "addknob svelte-upqpsm");
			add_location(div17, file$1, 297, 2, 7330);
			attr_dev(main, "class", "svelte-upqpsm");
			add_location(main, file$1, 170, 0, 4168);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			append_dev(main, div4);
			append_dev(div4, div0);
			append_dev(div0, label0);
			append_dev(label0, t0);
			append_dev(div4, t1);
			append_dev(div4, div1);
			append_dev(div1, label1);
			append_dev(label1, t2);
			append_dev(div1, t3);
			append_dev(div1, br0);
			append_dev(div1, t4);
			append_dev(div1, span0);
			append_dev(span0, t5);
			append_dev(div4, t6);
			append_dev(div4, div2);
			append_dev(div2, label2);
			append_dev(label2, t7);
			append_dev(div2, t8);
			append_dev(div2, br1);
			append_dev(div2, t9);
			append_dev(div2, span1);
			append_dev(span1, t10);
			append_dev(div4, t11);
			append_dev(div4, div3);
			append_dev(div3, label3);
			append_dev(label3, t12);
			append_dev(div3, t13);
			append_dev(div3, br2);
			append_dev(div3, t14);
			append_dev(div3, span2);
			append_dev(span2, t15);
			append_dev(main, t16);
			append_dev(main, div9);
			append_dev(div9, div5);
			append_dev(div5, label4);
			append_dev(label4, t17);
			append_dev(div9, t18);
			append_dev(div9, div6);
			append_dev(div6, label5);
			append_dev(label5, t19);
			append_dev(div6, t20);
			append_dev(div6, br3);
			append_dev(div6, t21);
			append_dev(div6, span3);
			append_dev(span3, t22);
			append_dev(div9, t23);
			append_dev(div9, div7);
			append_dev(div7, label6);
			append_dev(label6, t24);
			append_dev(div7, t25);
			append_dev(div7, br4);
			append_dev(div7, t26);
			append_dev(div7, span4);
			append_dev(span4, t27);
			append_dev(div9, t28);
			append_dev(div9, div8);
			append_dev(div8, label7);
			append_dev(label7, t29);
			append_dev(div8, t30);
			append_dev(div8, br5);
			append_dev(div8, t31);
			append_dev(div8, span5);
			append_dev(span5, t32);
			append_dev(main, t33);
			append_dev(main, div14);
			append_dev(div14, div10);
			append_dev(div10, t34);
			append_dev(div14, t35);
			append_dev(div14, div11);
			append_dev(div11, t36);
			append_dev(div11, br6);
			append_dev(div11, t37);
			append_dev(div11, t38);
			append_dev(div11, t39);
			append_dev(div14, t40);
			append_dev(div14, div12);
			append_dev(div12, t41);
			append_dev(div12, br7);
			append_dev(div12, t42);
			append_dev(div12, t43);
			append_dev(div12, t44);
			append_dev(div14, t45);
			append_dev(div14, div13);
			mount_component(indload, div13, null);
			append_dev(main, t46);
			append_dev(main, div15);
			append_dev(div15, hr);
			append_dev(main, t47);
			append_dev(main, div16);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div16, null);
			}

			if (each_1_else) {
				each_1_else.m(div16, null);
			}

			append_dev(main, t48);
			append_dev(main, div17);
			mount_component(button, div17, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (!current || dirty[0] & /*startbalances*/ 64) set_data_dev(t5, /*startbalances*/ ctx[6]);
			if (!current || dirty[0] & /*balances*/ 128) set_data_dev(t10, /*balances*/ ctx[7]);
			if ((!current || dirty[0] & /*balances, startbalances*/ 192) && t15_value !== (t15_value = (/*balances*/ ctx[7] - /*startbalances*/ ctx[6]).toFixed(2) + "")) set_data_dev(t15, t15_value);
			if (!current || dirty[0] & /*kolvoleads*/ 2) set_data_dev(t22, /*kolvoleads*/ ctx[1]);
			if (!current || dirty[0] & /*sumleads*/ 4) set_data_dev(t27, /*sumleads*/ ctx[2]);
			if (!current || dirty[0] & /*srleads*/ 8) set_data_dev(t32, /*srleads*/ ctx[3]);
			if (!current || dirty[0] & /*profitsumproc*/ 32) set_data_dev(t38, /*profitsumproc*/ ctx[5]);
			if (!current || dirty[0] & /*profitsumproctoday*/ 16) set_data_dev(t43, /*profitsumproctoday*/ ctx[4]);
			const indload_changes = {};
			if (dirty[0] & /*sumprocvlozh*/ 256) indload_changes.procvlozh = /*sumprocvlozh*/ ctx[8];
			indload.$set(indload_changes);

			if (dirty[0] & /*entryBot, bots*/ 1025) {
				each_value = Object.entries(/*bots*/ ctx[0]);
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div16, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();

				if (each_value.length) {
					if (each_1_else) {
						each_1_else.d(1);
						each_1_else = null;
					}
				} else if (!each_1_else) {
					each_1_else = create_else_block(ctx);
					each_1_else.c();
					each_1_else.m(div16, null);
				}
			}

			const button_changes = {};

			if (dirty[1] & /*$$scope*/ 8) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(indload.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(indload.$$.fragment, local);
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
			destroy_component(indload);
			destroy_each(each_blocks, detaching);
			if (each_1_else) each_1_else.d();
			destroy_component(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function profitsumproctodaycalc(arr) {
	let sum = 0;

	arr.forEach(element => {
		sum = sum + element[5];
	});

	return sum;
}

function profitsumproccalc(arr) {
	let sum = 0;

	arr.forEach(element => {
		sum = sum + element[3];
	});

	return sum;
}

function startbalancescalc(arr) {
	let sum = 0;

	arr.forEach(element => {
		sum = sum + element[6];
	});

	return sum;
}

function balancescalc(arr) {
	let sum = 0;

	arr.forEach(element => {
		sum = sum + element[7];
	});

	return sum;
}

function vlozhcalc(arr) {
	let sum = 0;

	arr.forEach(element => {
		sum = sum + element[10];
	});

	return sum;
}

function instance$1($$self, $$props, $$invalidate) {
	let $stateStore;
	let $authStore;
	validate_store(stateStore, "stateStore");
	component_subscribe($$self, stateStore, $$value => $$invalidate(19, $stateStore = $$value));
	validate_store(authStore, "authStore");
	component_subscribe($$self, authStore, $$value => $$invalidate(20, $authStore = $$value));
	let { comission } = $$props;
	let { show } = $$props;
	let urlhost = $stateStore.urlhost;
	let bots = [];
	let urlbotslist = urlhost + "botslist";
	let leadsurl = urlhost + "leads";
	let newbot = urlhost + "api/newbot.php";
	let api_bots = urlbotslist;
	let selectbot;
	let leadsdata;
	let kolvoleads;
	let sumleads;
	let srleads;

	/////routes
	let routIsBotList = true;

	let routIsBot = false;
	let routIsNewBot = false;

	function routBotList() {
		set_store_value(stateStore, $stateStore.rout = "botlist", $stateStore);
		set_store_value(stateStore, $stateStore.selectbotname = "", $stateStore);
		$$invalidate(15, routIsBotList = true);
		routIsBot = false;
		routIsNewBot = false;
	}

	function routNewBot() {
		set_store_value(stateStore, $stateStore.rout = "newbot", $stateStore);
		clearInterval($stateStore.timerIdlist);

		//ym(65948110, 'reachGoal', 'begin-createbot');
		$$invalidate(15, routIsBotList = false);

		routIsBot = false;
		routIsNewBot = true;
	}

	/////end routes
	function ismybot(value) {
		return value[8] === $authStore.user.uid;
	}

	onMount(async () => {
		const res = await fetch(api_bots, {
			headers: {
				Accept: "application/json",
				"Content-Type": "application/json"
			},
			method: "get"
		}).then(res => res.json()).then(json => {
			$$invalidate(0, bots = json);

			if (bots == null) {
				$$invalidate(0, bots = []);
			}

			console.log(json);
			console.log(bots);
		});

		const leads = await fetch(leadsurl, {
			headers: {
				Accept: "application/json",
				"Content-Type": "application/json"
			},
			method: "get"
		}).then(leads => leads.json()).then(json => {
			$$invalidate(1, kolvoleads = json.count);
			$$invalidate(2, sumleads = json.sum);
			$$invalidate(3, srleads = json.sr);
		});
	});

	async function fetch1s() {
		const res = await fetch(urlbotslist);
		$$invalidate(0, bots = (await res.json()).filter(ismybot));
	}

	function entryBot(botid) {
		console.log(botid);
		clearInterval($stateStore.timerIdlist);
		selectbot = botid;
		set_store_value(stateStore, $stateStore.selectbotid = botid, $stateStore);
		set_store_value(stateStore, $stateStore.selectbotname = botid, $stateStore);
		localStorage.selectbot = botid;
		set_store_value(stateStore, $stateStore.rout = "bot", $stateStore);
	} //window.location = "/bot?selectbot="+selectbot;

	let selectbotname;
	clearInterval($stateStore.timerId);
	routBotList();
	const writable_props = ["comission", "show"];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$1.warn(`<BotsList> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("BotsList", $$slots, []);

	$$self.$set = $$props => {
		if ("comission" in $$props) $$invalidate(12, comission = $$props.comission);
		if ("show" in $$props) $$invalidate(11, show = $$props.show);
	};

	$$self.$capture_state = () => ({
		stateStore,
		onMount,
		Switch,
		NewBot,
		comission,
		show,
		Button,
		authStore,
		IndLoad,
		urlhost,
		bots,
		urlbotslist,
		leadsurl,
		newbot,
		api_bots,
		selectbot,
		leadsdata,
		kolvoleads,
		sumleads,
		srleads,
		routIsBotList,
		routIsBot,
		routIsNewBot,
		routBotList,
		routNewBot,
		ismybot,
		fetch1s,
		entryBot,
		profitsumproctodaycalc,
		profitsumproccalc,
		startbalancescalc,
		balancescalc,
		vlozhcalc,
		selectbotname,
		$stateStore,
		$authStore,
		pkg,
		profitsumproctoday,
		profitsumproc,
		startbalances,
		balances,
		sumprocvlozh
	});

	$$self.$inject_state = $$props => {
		if ("comission" in $$props) $$invalidate(12, comission = $$props.comission);
		if ("show" in $$props) $$invalidate(11, show = $$props.show);
		if ("urlhost" in $$props) $$invalidate(13, urlhost = $$props.urlhost);
		if ("bots" in $$props) $$invalidate(0, bots = $$props.bots);
		if ("urlbotslist" in $$props) urlbotslist = $$props.urlbotslist;
		if ("leadsurl" in $$props) leadsurl = $$props.leadsurl;
		if ("newbot" in $$props) newbot = $$props.newbot;
		if ("api_bots" in $$props) api_bots = $$props.api_bots;
		if ("selectbot" in $$props) selectbot = $$props.selectbot;
		if ("leadsdata" in $$props) leadsdata = $$props.leadsdata;
		if ("kolvoleads" in $$props) $$invalidate(1, kolvoleads = $$props.kolvoleads);
		if ("sumleads" in $$props) $$invalidate(2, sumleads = $$props.sumleads);
		if ("srleads" in $$props) $$invalidate(3, srleads = $$props.srleads);
		if ("routIsBotList" in $$props) $$invalidate(15, routIsBotList = $$props.routIsBotList);
		if ("routIsBot" in $$props) routIsBot = $$props.routIsBot;
		if ("routIsNewBot" in $$props) routIsNewBot = $$props.routIsNewBot;
		if ("selectbotname" in $$props) $$invalidate(18, selectbotname = $$props.selectbotname);
		if ("pkg" in $$props) pkg = $$props.pkg;
		if ("profitsumproctoday" in $$props) $$invalidate(4, profitsumproctoday = $$props.profitsumproctoday);
		if ("profitsumproc" in $$props) $$invalidate(5, profitsumproc = $$props.profitsumproc);
		if ("startbalances" in $$props) $$invalidate(6, startbalances = $$props.startbalances);
		if ("balances" in $$props) $$invalidate(7, balances = $$props.balances);
		if ("sumprocvlozh" in $$props) $$invalidate(8, sumprocvlozh = $$props.sumprocvlozh);
	};

	let pkg;
	let profitsumproctoday;
	let profitsumproc;
	let startbalances;
	let balances;
	let sumprocvlozh;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*$stateStore*/ 524288) {
			 $$invalidate(13, urlhost = $stateStore.urlhost);
		}

		if ($$self.$$.dirty[0] & /*$stateStore*/ 524288) {
			 $$invalidate(18, selectbotname = $stateStore.selectbotname);
		}

		if ($$self.$$.dirty[0] & /*urlhost, comission, selectbotname, routIsBotList*/ 307200) {
			 pkg = {
				urlhost,
				comission,
				urlhost,
				selectbotname,
				routIsBotList
			};
		}

		if ($$self.$$.dirty[0] & /*bots*/ 1) {
			//$: if (selectbot) {
			//    selectbotname = bots.botname;
			//}
			 $$invalidate(4, profitsumproctoday = profitsumproctodaycalc(bots).toFixed(2));
		}

		if ($$self.$$.dirty[0] & /*bots*/ 1) {
			 $$invalidate(5, profitsumproc = profitsumproccalc(bots).toFixed(2));
		}

		if ($$self.$$.dirty[0] & /*bots*/ 1) {
			 $$invalidate(6, startbalances = startbalancescalc(bots).toFixed(2));
		}

		if ($$self.$$.dirty[0] & /*bots*/ 1) {
			 $$invalidate(7, balances = balancescalc(bots).toFixed(2));
		}

		if ($$self.$$.dirty[0] & /*bots*/ 1) {
			 $$invalidate(8, sumprocvlozh = vlozhcalc(bots) / startbalancescalc(bots) * 100);
		}

		if ($$self.$$.dirty[0] & /*$stateStore*/ 524288) {
			//$stateStore.timerIdlist = setInterval(fetch1s, 10000);
			 $$invalidate(11, show = $stateStore.showmenu);
		}
	};

	return [
		bots,
		kolvoleads,
		sumleads,
		srleads,
		profitsumproctoday,
		profitsumproc,
		startbalances,
		balances,
		sumprocvlozh,
		routNewBot,
		entryBot,
		show,
		comission
	];
}

class BotsList extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { comission: 12, show: 11 }, [-1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "BotsList",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*comission*/ ctx[12] === undefined && !("comission" in props)) {
			console_1$1.warn("<BotsList> was created without expected prop 'comission'");
		}

		if (/*show*/ ctx[11] === undefined && !("show" in props)) {
			console_1$1.warn("<BotsList> was created without expected prop 'show'");
		}
	}

	get comission() {
		throw new Error("<BotsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set comission(value) {
		throw new Error("<BotsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get show() {
		throw new Error("<BotsList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set show(value) {
		throw new Error("<BotsList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/index.svelte generated by Svelte v3.24.0 */
const file$2 = "src/routes/index.svelte";

// (47:0) {:else}
function create_else_block$1(ctx) {
	let div;
	let p;
	let t0;
	let t1;
	let br0;
	let t2;
	let br1;
	let t3;
	let br2;
	let t4;
	let signinbutton;
	let current;

	signinbutton = new SignInButton({
			props: { provider: "google" },
			$$inline: true
		});

	const block = {
		c: function create() {
			div = element("div");
			p = element("p");
			t0 = text("Скачайте бесплатно или войдите в облако");
			t1 = space();
			br0 = element("br");
			t2 = space();
			br1 = element("br");
			t3 = space();
			br2 = element("br");
			t4 = space();
			create_component(signinbutton.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", {});
			var div_nodes = children(div);
			p = claim_element(div_nodes, "P", {});
			var p_nodes = children(p);
			t0 = claim_text(p_nodes, "Скачайте бесплатно или войдите в облако");
			p_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			br0 = claim_element(div_nodes, "BR", {});
			t2 = claim_space(div_nodes);
			br1 = claim_element(div_nodes, "BR", {});
			t3 = claim_space(div_nodes);
			br2 = claim_element(div_nodes, "BR", {});
			t4 = claim_space(div_nodes);
			claim_component(signinbutton.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p, file$2, 48, 8, 1086);
			add_location(br0, file$2, 50, 8, 1142);
			add_location(br1, file$2, 51, 8, 1157);
			add_location(br2, file$2, 52, 8, 1172);
			add_location(div, file$2, 47, 4, 1072);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, p);
			append_dev(p, t0);
			append_dev(div, t1);
			append_dev(div, br0);
			append_dev(div, t2);
			append_dev(div, br1);
			append_dev(div, t3);
			append_dev(div, br2);
			append_dev(div, t4);
			mount_component(signinbutton, div, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(signinbutton.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(signinbutton.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(signinbutton);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block$1.name,
		type: "else",
		source: "(47:0) {:else}",
		ctx
	});

	return block;
}

// (45:0) {#if true}
function create_if_block(ctx) {
	let botslist;
	let current;
	const botslist_spread_levels = [/*pkg*/ ctx[0]];
	let botslist_props = {};

	for (let i = 0; i < botslist_spread_levels.length; i += 1) {
		botslist_props = assign(botslist_props, botslist_spread_levels[i]);
	}

	botslist = new BotsList({ props: botslist_props, $$inline: true });

	const block = {
		c: function create() {
			create_component(botslist.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(botslist.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(botslist, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const botslist_changes = (dirty & /*pkg*/ 1)
			? get_spread_update(botslist_spread_levels, [get_spread_object(/*pkg*/ ctx[0])])
			: {};

			botslist.$set(botslist_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(botslist.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(botslist.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(botslist, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(45:0) {#if true}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let t;
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block$1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		return 0;
	}

	current_block_type_index = select_block_type();
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			t = space();
			if_block.c();
			if_block_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-g6bci5\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			if_block.l(nodes);
			if_block_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			document.title = "Ti Trading Bot v1";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if_block.p(ctx, dirty);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let $stateStore;
	validate_store(stateStore, "stateStore");
	component_subscribe($$self, stateStore, $$value => $$invalidate(1, $stateStore = $$value));
	clearInterval($stateStore.timerId);
	clearInterval($stateStore.timerIdlist);

	//  let userid = $authStore.user.uid;
	const pkg = {
		//urlhost: urlhost,
		//urlhostkeys:'https://dev.localhost/usersettings/',
		//urlhost: 'http://localhost/bbot/',
		comission: 0.15
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);

	$$self.$capture_state = () => ({
		stateStore,
		BotsList,
		authStore,
		SignInButton,
		pkg,
		$stateStore
	});

	return [pkg];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$2.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
